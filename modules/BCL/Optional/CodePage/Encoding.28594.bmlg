//
// Created by Eugeny Grishul
//
// See license at http://bamelg.com/license.txt
//

namespace System.Text {
	public partial struct Encoding {
		public static struct CP28594 {
			public static readonly char[256] ToUtf16 = {
				    '\0', '\x0001', '\x0002', '\x0003', '\x0004', '\x0005', '\x0006',     '\a',     '\b',     '\t',     '\n',     '\v',     '\f',     '\r', '\x000E', '\x000F',
				'\x0010', '\x0011', '\x0012', '\x0013', '\x0014', '\x0015', '\x0016', '\x0017', '\x0018', '\x0019', '\x001A', '\x001B', '\x001C', '\x001D', '\x001E', '\x001F',
				     ' ',      '!',      '"',      '#',      '$',      '%',      '&',     '\'',      '(',      ')',      '*',      '+',      ',',      '-',      '.',      '/',
				     '0',      '1',      '2',      '3',      '4',      '5',      '6',      '7',      '8',      '9',      ':',      ';',      '<',      '=',      '>',      '?',
				     '@',      'A',      'B',      'C',      'D',      'E',      'F',      'G',      'H',      'I',      'J',      'K',      'L',      'M',      'N',      'O',
				     'P',      'Q',      'R',      'S',      'T',      'U',      'V',      'W',      'X',      'Y',      'Z',      '[',     '\\',      ']',      '^',      '_',
				     '`',      'a',      'b',      'c',      'd',      'e',      'f',      'g',      'h',      'i',      'j',      'k',      'l',      'm',      'n',      'o',
				     'p',      'q',      'r',      's',      't',      'u',      'v',      'w',      'x',      'y',      'z',      '{',      '|',      '}',      '~', '\x007F',
				'\x0080', '\x0081', '\x0082', '\x0083', '\x0084', '\x0085', '\x0086', '\x0087', '\x0088', '\x0089', '\x008A', '\x008B', '\x008C', '\x008D', '\x008E', '\x008F',
				'\x0090', '\x0091', '\x0092', '\x0093', '\x0094', '\x0095', '\x0096', '\x0097', '\x0098', '\x0099', '\x009A', '\x009B', '\x009C', '\x009D', '\x009E', '\x009F',
				'\x00A0',      'Ą',      'ĸ',      'Ŗ',      '¤',      'Ĩ',      'Ļ',      '§',      '¨',      'Š',      'Ē',      'Ģ',      'Ŧ',      '­',      'Ž',      '¯',
				     '°',      'ą',      '˛',      'ŗ',      '´',      'ĩ',      'ļ',      'ˇ',      '¸',      'š',      'ē',      'ģ',      'ŧ',      'Ŋ',      'ž',      'ŋ',
				     'Ā',      'Á',      'Â',      'Ã',      'Ä',      'Å',      'Æ',      'Į',      'Č',      'É',      'Ę',      'Ë',      'Ė',      'Í',      'Î',      'Ī',
				     'Đ',      'Ņ',      'Ō',      'Ķ',      'Ô',      'Õ',      'Ö',      '×',      'Ø',      'Ų',      'Ú',      'Û',      'Ü',      'Ũ',      'Ū',      'ß',
				     'ā',      'á',      'â',      'ã',      'ä',      'å',      'æ',      'į',      'č',      'é',      'ę',      'ë',      'ė',      'í',      'î',      'ī',
				     'đ',      'ņ',      'ō',      'ķ',      'ô',      'õ',      'ö',      '÷',      'ø',      'ų',      'ú',      'û',      'ü',      'ũ',      'ū',      '˙'
			};

			public static char* GetConversionTable() { return &ToUtf16[0]; }

			public static void GetBytes( char* chars, uintptr charCount, byte* bytes, uintptr byteCount ) {
				var count = Math.Min( charCount, byteCount );
				for( var i = 0U; i < count; ++i ) {
					var @char = ( ushort ) chars[i];
					var @byte = ( byte ) @char;
					if( @char >= 161 )
						switch( @char ) {
							case 0xA4:
							case 0xA7:
							case 0xA8:
							case 0xAD:
							case 0xAF:
							case 0xB0:
							case 0xB4:
							case 0xB8:
							case 0xC1:
							case 0xC2:
							case 0xC3:
							case 0xC4:
							case 0xC5:
							case 0xC6:
							case 0xC9:
							case 0xCB:
							case 0xCD:
							case 0xCE:
							case 0xD4:
							case 0xD5:
							case 0xD6:
							case 0xD7:
							case 0xD8:
							case 0xDA:
							case 0xDB:
							case 0xDC:
							case 0xDF:
							case 0xE1:
							case 0xE2:
							case 0xE3:
							case 0xE4:
							case 0xE5:
							case 0xE6:
							case 0xE9:
							case 0xEB:
							case 0xED:
							case 0xEE:
							case 0xF4:
							case 0xF5:
							case 0xF6:
							case 0xF7:
							case 0xF8:
							case 0xFA:
							case 0xFB:
							case 0xFC:
								break;

							case 0x100: @byte = 0xC0; break;
							case 0x101: @byte = 0xE0; break;
							case 0x104: @byte = 0xA1; break;
							case 0x105: @byte = 0xB1; break;
							case 0x10C: @byte = 0xC8; break;
							case 0x10D: @byte = 0xE8; break;
							case 0x110: @byte = 0xD0; break;
							case 0x111: @byte = 0xF0; break;
							case 0x112: @byte = 0xAA; break;
							case 0x113: @byte = 0xBA; break;
							case 0x116: @byte = 0xCC; break;
							case 0x117: @byte = 0xEC; break;
							case 0x118: @byte = 0xCA; break;
							case 0x119: @byte = 0xEA; break;
							case 0x122: @byte = 0xAB; break;
							case 0x123: @byte = 0xBB; break;
							case 0x128: @byte = 0xA5; break;
							case 0x129: @byte = 0xB5; break;
							case 0x12A: @byte = 0xCF; break;
							case 0x12B: @byte = 0xEF; break;
							case 0x12E: @byte = 0xC7; break;
							case 0x12F: @byte = 0xE7; break;
							case 0x136: @byte = 0xD3; break;
							case 0x137: @byte = 0xF3; break;
							case 0x138: @byte = 0xA2; break;
							case 0x13B: @byte = 0xA6; break;
							case 0x13C: @byte = 0xB6; break;
							case 0x145: @byte = 0xD1; break;
							case 0x146: @byte = 0xF1; break;
							case 0x14A: @byte = 0xBD; break;
							case 0x14B: @byte = 0xBF; break;
							case 0x14C: @byte = 0xD2; break;
							case 0x14D: @byte = 0xF2; break;
							case 0x156: @byte = 0xA3; break;
							case 0x157: @byte = 0xB3; break;
							case 0x160: @byte = 0xA9; break;
							case 0x161: @byte = 0xB9; break;
							case 0x166: @byte = 0xAC; break;
							case 0x167: @byte = 0xBC; break;
							case 0x168: @byte = 0xDD; break;
							case 0x169: @byte = 0xFD; break;
							case 0x16A: @byte = 0xDE; break;
							case 0x16B: @byte = 0xFE; break;
							case 0x172: @byte = 0xD9; break;
							case 0x173: @byte = 0xF9; break;
							case 0x17D: @byte = 0xAE; break;
							case 0x17E: @byte = 0xBE; break;
							case 0x2C7: @byte = 0xB7; break;
							case 0x2D9: @byte = 0xFF; break;
							case 0x2DB: @byte = 0xB2; break;
							case 0xFF01: @byte = 0x21; break;
							case 0xFF02: @byte = 0x22; break;
							case 0xFF03: @byte = 0x23; break;
							case 0xFF04: @byte = 0x24; break;
							case 0xFF05: @byte = 0x25; break;
							case 0xFF06: @byte = 0x26; break;
							case 0xFF07: @byte = 0x27; break;
							case 0xFF08: @byte = 0x28; break;
							case 0xFF09: @byte = 0x29; break;
							case 0xFF0A: @byte = 0x2A; break;
							case 0xFF0B: @byte = 0x2B; break;
							case 0xFF0C: @byte = 0x2C; break;
							case 0xFF0D: @byte = 0x2D; break;
							case 0xFF0E: @byte = 0x2E; break;
							case 0xFF0F: @byte = 0x2F; break;
							case 0xFF10: @byte = 0x30; break;
							case 0xFF11: @byte = 0x31; break;
							case 0xFF12: @byte = 0x32; break;
							case 0xFF13: @byte = 0x33; break;
							case 0xFF14: @byte = 0x34; break;
							case 0xFF15: @byte = 0x35; break;
							case 0xFF16: @byte = 0x36; break;
							case 0xFF17: @byte = 0x37; break;
							case 0xFF18: @byte = 0x38; break;
							case 0xFF19: @byte = 0x39; break;
							case 0xFF1A: @byte = 0x3A; break;
							case 0xFF1B: @byte = 0x3B; break;
							case 0xFF1C: @byte = 0x3C; break;
							case 0xFF1D: @byte = 0x3D; break;
							case 0xFF1E: @byte = 0x3E; break;
							case 0xFF1F: @byte = 0x3F; break;
							case 0xFF20: @byte = 0x40; break;
							case 0xFF21: @byte = 0x41; break;
							case 0xFF22: @byte = 0x42; break;
							case 0xFF23: @byte = 0x43; break;
							case 0xFF24: @byte = 0x44; break;
							case 0xFF25: @byte = 0x45; break;
							case 0xFF26: @byte = 0x46; break;
							case 0xFF27: @byte = 0x47; break;
							case 0xFF28: @byte = 0x48; break;
							case 0xFF29: @byte = 0x49; break;
							case 0xFF2A: @byte = 0x4A; break;
							case 0xFF2B: @byte = 0x4B; break;
							case 0xFF2C: @byte = 0x4C; break;
							case 0xFF2D: @byte = 0x4D; break;
							case 0xFF2E: @byte = 0x4E; break;
							case 0xFF2F: @byte = 0x4F; break;
							case 0xFF30: @byte = 0x50; break;
							case 0xFF31: @byte = 0x51; break;
							case 0xFF32: @byte = 0x52; break;
							case 0xFF33: @byte = 0x53; break;
							case 0xFF34: @byte = 0x54; break;
							case 0xFF35: @byte = 0x55; break;
							case 0xFF36: @byte = 0x56; break;
							case 0xFF37: @byte = 0x57; break;
							case 0xFF38: @byte = 0x58; break;
							case 0xFF39: @byte = 0x59; break;
							case 0xFF3A: @byte = 0x5A; break;
							case 0xFF3B: @byte = 0x5B; break;
							case 0xFF3C: @byte = 0x5C; break;
							case 0xFF3D: @byte = 0x5D; break;
							case 0xFF3E: @byte = 0x5E; break;
							case 0xFF3F: @byte = 0x5F; break;
							case 0xFF40: @byte = 0x60; break;
							case 0xFF41: @byte = 0x61; break;
							case 0xFF42: @byte = 0x62; break;
							case 0xFF43: @byte = 0x63; break;
							case 0xFF44: @byte = 0x64; break;
							case 0xFF45: @byte = 0x65; break;
							case 0xFF46: @byte = 0x66; break;
							case 0xFF47: @byte = 0x67; break;
							case 0xFF48: @byte = 0x68; break;
							case 0xFF49: @byte = 0x69; break;
							case 0xFF4A: @byte = 0x6A; break;
							case 0xFF4B: @byte = 0x6B; break;
							case 0xFF4C: @byte = 0x6C; break;
							case 0xFF4D: @byte = 0x6D; break;
							case 0xFF4E: @byte = 0x6E; break;
							case 0xFF4F: @byte = 0x6F; break;
							case 0xFF50: @byte = 0x70; break;
							case 0xFF51: @byte = 0x71; break;
							case 0xFF52: @byte = 0x72; break;
							case 0xFF53: @byte = 0x73; break;
							case 0xFF54: @byte = 0x74; break;
							case 0xFF55: @byte = 0x75; break;
							case 0xFF56: @byte = 0x76; break;
							case 0xFF57: @byte = 0x77; break;
							case 0xFF58: @byte = 0x78; break;
							case 0xFF59: @byte = 0x79; break;
							case 0xFF5A: @byte = 0x7A; break;
							case 0xFF5B: @byte = 0x7B; break;
							case 0xFF5C: @byte = 0x7C; break;
							case 0xFF5D: @byte = 0x7D; break;
							case 0xFF5E: @byte = 0x7E; break;
							default: @byte = ( byte ) '?'; break;
						}

					bytes[i] = @byte;
				}

				if( count < byteCount ) bytes[count] = 0;
			}
		}
	}
}