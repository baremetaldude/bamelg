//
// Created by Eugeny Grishul
//
// See license at http://bamelg.com/license.txt
//

namespace System.Text {
	public partial struct Encoding {
		public static struct CP1251 {
			public static readonly char[256] ToUtf16 = {
				    '\0', '\x0001', '\x0002', '\x0003', '\x0004', '\x0005', '\x0006',     '\a',     '\b',     '\t',     '\n',     '\v',     '\f',     '\r', '\x000E', '\x000F',
				'\x0010', '\x0011', '\x0012', '\x0013', '\x0014', '\x0015', '\x0016', '\x0017', '\x0018', '\x0019', '\x001A', '\x001B', '\x001C', '\x001D', '\x001E', '\x001F',
				     ' ',      '!',      '"',      '#',      '$',      '%',      '&',     '\'',      '(',      ')',      '*',      '+',      ',',      '-',      '.',      '/',
				     '0',      '1',      '2',      '3',      '4',      '5',      '6',      '7',      '8',      '9',      ':',      ';',      '<',      '=',      '>',      '?',
				     '@',      'A',      'B',      'C',      'D',      'E',      'F',      'G',      'H',      'I',      'J',      'K',      'L',      'M',      'N',      'O',
				     'P',      'Q',      'R',      'S',      'T',      'U',      'V',      'W',      'X',      'Y',      'Z',      '[',     '\\',      ']',      '^',      '_',
				     '`',      'a',      'b',      'c',      'd',      'e',      'f',      'g',      'h',      'i',      'j',      'k',      'l',      'm',      'n',      'o',
				     'p',      'q',      'r',      's',      't',      'u',      'v',      'w',      'x',      'y',      'z',      '{',      '|',      '}',      '~', '\x007F',
				     'Ђ',      'Ѓ',      '‚',      'ѓ',      '„',      '…',      '†',      '‡',      '€',      '‰',      'Љ', '\x2039',      'Њ',      'Ќ',      'Ћ',      'Џ',
				     'ђ', '\x2018', '\x2019', '\x201C', '\x201D',      '•',      '–',      '—', '\x0098',      '™',      'љ', '\x203A',      'њ',      'ќ',      'ћ',      'џ',
				'\x00A0',      'Ў',      'ў',      'Ј',      '¤',      'Ґ',      '¦',      '§',      'Ё',      '©',      'Є', '\x00AB',      '¬',      '­',      '®',      'Ї',
				     '°',      '±',      'І',      'і',      'ґ',      'µ',      '¶',      '·',      'ё',      '№',      'є', '\x00BB',      'ј',      'Ѕ',      'ѕ',      'ї',
				     'А',      'Б',      'В',      'Г',      'Д',      'Е',      'Ж',      'З',      'И',      'Й',      'К',      'Л',      'М',      'Н',      'О',      'П',
				     'Р',      'С',      'Т',      'У',      'Ф',      'Х',      'Ц',      'Ч',      'Ш',      'Щ',      'Ъ',      'Ы',      'Ь',      'Э',      'Ю',      'Я',
				     'а',      'б',      'в',      'г',      'д',      'е',      'ж',      'з',      'и',      'й',      'к',      'л',      'м',      'н',      'о',      'п',
				     'р',      'с',      'т',      'у',      'ф',      'х',      'ц',      'ч',      'ш',      'щ',      'ъ',      'ы',      'ь',      'э',      'ю',      'я'
			};

			public static char* GetConversionTable() { return &ToUtf16[0]; }

			public static void GetBytes( char* chars, uintptr charCount, byte* bytes, uintptr byteCount ) {
				var count = Math.Min( charCount, byteCount );
				for( var i = 0U; i < count; ++i ) {
					var @char = ( ushort ) chars[i];
					var @byte = ( byte ) @char;
					if( @char >= 128 )
						switch( @char ) {
							case 0x98:
							case 0xA0:
							case 0xA4:
							case 0xA6:
							case 0xA7:
							case 0xA9:
							case 0xAB:
							case 0xAC:
							case 0xAD:
							case 0xAE:
							case 0xB0:
							case 0xB1:
							case 0xB5:
							case 0xB6:
							case 0xB7:
							case 0xBB:
								break;

							case 0x401: @byte = 0xA8; break;
							case 0x402: @byte = 0x80; break;
							case 0x403: @byte = 0x81; break;
							case 0x404: @byte = 0xAA; break;
							case 0x405: @byte = 0xBD; break;
							case 0x406: @byte = 0xB2; break;
							case 0x407: @byte = 0xAF; break;
							case 0x408: @byte = 0xA3; break;
							case 0x409: @byte = 0x8A; break;
							case 0x40A: @byte = 0x8C; break;
							case 0x40B: @byte = 0x8E; break;
							case 0x40C: @byte = 0x8D; break;
							case 0x40E: @byte = 0xA1; break;
							case 0x40F: @byte = 0x8F; break;
							case 0x410: @byte = 0xC0; break;
							case 0x411: @byte = 0xC1; break;
							case 0x412: @byte = 0xC2; break;
							case 0x413: @byte = 0xC3; break;
							case 0x414: @byte = 0xC4; break;
							case 0x415: @byte = 0xC5; break;
							case 0x416: @byte = 0xC6; break;
							case 0x417: @byte = 0xC7; break;
							case 0x418: @byte = 0xC8; break;
							case 0x419: @byte = 0xC9; break;
							case 0x41A: @byte = 0xCA; break;
							case 0x41B: @byte = 0xCB; break;
							case 0x41C: @byte = 0xCC; break;
							case 0x41D: @byte = 0xCD; break;
							case 0x41E: @byte = 0xCE; break;
							case 0x41F: @byte = 0xCF; break;
							case 0x420: @byte = 0xD0; break;
							case 0x421: @byte = 0xD1; break;
							case 0x422: @byte = 0xD2; break;
							case 0x423: @byte = 0xD3; break;
							case 0x424: @byte = 0xD4; break;
							case 0x425: @byte = 0xD5; break;
							case 0x426: @byte = 0xD6; break;
							case 0x427: @byte = 0xD7; break;
							case 0x428: @byte = 0xD8; break;
							case 0x429: @byte = 0xD9; break;
							case 0x42A: @byte = 0xDA; break;
							case 0x42B: @byte = 0xDB; break;
							case 0x42C: @byte = 0xDC; break;
							case 0x42D: @byte = 0xDD; break;
							case 0x42E: @byte = 0xDE; break;
							case 0x42F: @byte = 0xDF; break;
							case 0x430: @byte = 0xE0; break;
							case 0x431: @byte = 0xE1; break;
							case 0x432: @byte = 0xE2; break;
							case 0x433: @byte = 0xE3; break;
							case 0x434: @byte = 0xE4; break;
							case 0x435: @byte = 0xE5; break;
							case 0x436: @byte = 0xE6; break;
							case 0x437: @byte = 0xE7; break;
							case 0x438: @byte = 0xE8; break;
							case 0x439: @byte = 0xE9; break;
							case 0x43A: @byte = 0xEA; break;
							case 0x43B: @byte = 0xEB; break;
							case 0x43C: @byte = 0xEC; break;
							case 0x43D: @byte = 0xED; break;
							case 0x43E: @byte = 0xEE; break;
							case 0x43F: @byte = 0xEF; break;
							case 0x440: @byte = 0xF0; break;
							case 0x441: @byte = 0xF1; break;
							case 0x442: @byte = 0xF2; break;
							case 0x443: @byte = 0xF3; break;
							case 0x444: @byte = 0xF4; break;
							case 0x445: @byte = 0xF5; break;
							case 0x446: @byte = 0xF6; break;
							case 0x447: @byte = 0xF7; break;
							case 0x448: @byte = 0xF8; break;
							case 0x449: @byte = 0xF9; break;
							case 0x44A: @byte = 0xFA; break;
							case 0x44B: @byte = 0xFB; break;
							case 0x44C: @byte = 0xFC; break;
							case 0x44D: @byte = 0xFD; break;
							case 0x44E: @byte = 0xFE; break;
							case 0x44F: @byte = 0xFF; break;
							case 0x451: @byte = 0xB8; break;
							case 0x452: @byte = 0x90; break;
							case 0x453: @byte = 0x83; break;
							case 0x454: @byte = 0xBA; break;
							case 0x455: @byte = 0xBE; break;
							case 0x456: @byte = 0xB3; break;
							case 0x457: @byte = 0xBF; break;
							case 0x458: @byte = 0xBC; break;
							case 0x459: @byte = 0x9A; break;
							case 0x45A: @byte = 0x9C; break;
							case 0x45B: @byte = 0x9E; break;
							case 0x45C: @byte = 0x9D; break;
							case 0x45E: @byte = 0xA2; break;
							case 0x45F: @byte = 0x9F; break;
							case 0x490: @byte = 0xA5; break;
							case 0x491: @byte = 0xB4; break;
							case 0x2013: @byte = 0x96; break;
							case 0x2014: @byte = 0x97; break;
							case 0x2018: @byte = 0x91; break;
							case 0x2019: @byte = 0x92; break;
							case 0x201A: @byte = 0x82; break;
							case 0x201C: @byte = 0x93; break;
							case 0x201D: @byte = 0x94; break;
							case 0x201E: @byte = 0x84; break;
							case 0x2020: @byte = 0x86; break;
							case 0x2021: @byte = 0x87; break;
							case 0x2022: @byte = 0x95; break;
							case 0x2026: @byte = 0x85; break;
							case 0x2030: @byte = 0x89; break;
							case 0x2039: @byte = 0x8B; break;
							case 0x203A: @byte = 0x9B; break;
							case 0x20AC: @byte = 0x88; break;
							case 0x2116: @byte = 0xB9; break;
							case 0x2122: @byte = 0x99; break;
							case 0xFF01: @byte = 0x21; break;
							case 0xFF02: @byte = 0x22; break;
							case 0xFF03: @byte = 0x23; break;
							case 0xFF04: @byte = 0x24; break;
							case 0xFF05: @byte = 0x25; break;
							case 0xFF06: @byte = 0x26; break;
							case 0xFF07: @byte = 0x27; break;
							case 0xFF08: @byte = 0x28; break;
							case 0xFF09: @byte = 0x29; break;
							case 0xFF0A: @byte = 0x2A; break;
							case 0xFF0B: @byte = 0x2B; break;
							case 0xFF0C: @byte = 0x2C; break;
							case 0xFF0D: @byte = 0x2D; break;
							case 0xFF0E: @byte = 0x2E; break;
							case 0xFF0F: @byte = 0x2F; break;
							case 0xFF10: @byte = 0x30; break;
							case 0xFF11: @byte = 0x31; break;
							case 0xFF12: @byte = 0x32; break;
							case 0xFF13: @byte = 0x33; break;
							case 0xFF14: @byte = 0x34; break;
							case 0xFF15: @byte = 0x35; break;
							case 0xFF16: @byte = 0x36; break;
							case 0xFF17: @byte = 0x37; break;
							case 0xFF18: @byte = 0x38; break;
							case 0xFF19: @byte = 0x39; break;
							case 0xFF1A: @byte = 0x3A; break;
							case 0xFF1B: @byte = 0x3B; break;
							case 0xFF1C: @byte = 0x3C; break;
							case 0xFF1D: @byte = 0x3D; break;
							case 0xFF1E: @byte = 0x3E; break;
							case 0xFF1F: @byte = 0x3F; break;
							case 0xFF20: @byte = 0x40; break;
							case 0xFF21: @byte = 0x41; break;
							case 0xFF22: @byte = 0x42; break;
							case 0xFF23: @byte = 0x43; break;
							case 0xFF24: @byte = 0x44; break;
							case 0xFF25: @byte = 0x45; break;
							case 0xFF26: @byte = 0x46; break;
							case 0xFF27: @byte = 0x47; break;
							case 0xFF28: @byte = 0x48; break;
							case 0xFF29: @byte = 0x49; break;
							case 0xFF2A: @byte = 0x4A; break;
							case 0xFF2B: @byte = 0x4B; break;
							case 0xFF2C: @byte = 0x4C; break;
							case 0xFF2D: @byte = 0x4D; break;
							case 0xFF2E: @byte = 0x4E; break;
							case 0xFF2F: @byte = 0x4F; break;
							case 0xFF30: @byte = 0x50; break;
							case 0xFF31: @byte = 0x51; break;
							case 0xFF32: @byte = 0x52; break;
							case 0xFF33: @byte = 0x53; break;
							case 0xFF34: @byte = 0x54; break;
							case 0xFF35: @byte = 0x55; break;
							case 0xFF36: @byte = 0x56; break;
							case 0xFF37: @byte = 0x57; break;
							case 0xFF38: @byte = 0x58; break;
							case 0xFF39: @byte = 0x59; break;
							case 0xFF3A: @byte = 0x5A; break;
							case 0xFF3B: @byte = 0x5B; break;
							case 0xFF3C: @byte = 0x5C; break;
							case 0xFF3D: @byte = 0x5D; break;
							case 0xFF3E: @byte = 0x5E; break;
							case 0xFF3F: @byte = 0x5F; break;
							case 0xFF40: @byte = 0x60; break;
							case 0xFF41: @byte = 0x61; break;
							case 0xFF42: @byte = 0x62; break;
							case 0xFF43: @byte = 0x63; break;
							case 0xFF44: @byte = 0x64; break;
							case 0xFF45: @byte = 0x65; break;
							case 0xFF46: @byte = 0x66; break;
							case 0xFF47: @byte = 0x67; break;
							case 0xFF48: @byte = 0x68; break;
							case 0xFF49: @byte = 0x69; break;
							case 0xFF4A: @byte = 0x6A; break;
							case 0xFF4B: @byte = 0x6B; break;
							case 0xFF4C: @byte = 0x6C; break;
							case 0xFF4D: @byte = 0x6D; break;
							case 0xFF4E: @byte = 0x6E; break;
							case 0xFF4F: @byte = 0x6F; break;
							case 0xFF50: @byte = 0x70; break;
							case 0xFF51: @byte = 0x71; break;
							case 0xFF52: @byte = 0x72; break;
							case 0xFF53: @byte = 0x73; break;
							case 0xFF54: @byte = 0x74; break;
							case 0xFF55: @byte = 0x75; break;
							case 0xFF56: @byte = 0x76; break;
							case 0xFF57: @byte = 0x77; break;
							case 0xFF58: @byte = 0x78; break;
							case 0xFF59: @byte = 0x79; break;
							case 0xFF5A: @byte = 0x7A; break;
							case 0xFF5B: @byte = 0x7B; break;
							case 0xFF5C: @byte = 0x7C; break;
							case 0xFF5D: @byte = 0x7D; break;
							case 0xFF5E: @byte = 0x7E; break;
							default: @byte = ( byte ) '?'; break;
						}

					bytes[i] = @byte;
				}

				if( count < byteCount ) bytes[count] = 0;
			}
		}
	}
}