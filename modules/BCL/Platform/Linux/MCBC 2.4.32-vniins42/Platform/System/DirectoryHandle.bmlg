//
// Created by Eugeny Grishul
//
// See license at http://bamelg.com/license.txt
//

using System;
using System.IO;

using Platform.IO;
using Platform.Libc;

namespace Platform.Kernel {
	public struct DirectoryHandle : IOHandle {
		public static new thistype Invalid { get { return bitcast<thistype>( basetype.Invalid ); } }

		public DirectoryHandle() { }
		public DirectoryHandle( CUtf8String name ) { LibcApi.Assert( Open( name ) ); }

		public SystemError Open( CUtf8String name ) { return OpenBlocking( name, FctlFlags.O_RDONLY | FctlFlags.O_DIRECTORY, 0 ); }

		internal SystemError getdents64( dirent64* buffer, intptr length, int& readen ) {
			using( Fiber.AsyncCompletionRegion() )
				return KernelApi.getdents64( readen, this, buffer, length );
		}
	}
}