//
// Created by Eugeny Grishul
//
// See license at http://bamelg.com/license.txt
//
// NOTE: pipes are simple byte streams, they do not preserve message boundaries
//

using System;

using Platform.Libc;

namespace Platform.Kernel {
	public struct PipeHandle : IOHandleNonBlocking {
		public const int ReadEnd = 0;
		public const int WriteEnd = 1;

		public static new thistype Invalid { get { return bitcast<thistype>( basetype.Invalid ); } }

		public void WriteByte( byte value ) { Write( &value, sizeof( value ) ); }

		public int PipeSize {
			get {
				int result;
				LibcApi.AssertErrno( result = LibcApi.fcntl( this, FctlCommand.F_GETPIPE_SZ, 0 ) );
				return result;
			}
			set {
				LibcApi.AssertErrno( LibcApi.fcntl( this, FctlCommand.F_SETPIPE_SZ, ( FctlFlags ) value ) );
			}
		}

	}
}