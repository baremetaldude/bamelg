//
// Created by Eugeny Grishul
//
// See license at http://bamelg.com/license.txt
//

using System;
using System.Runtime.InteropServices;

using Platform.Libc;

namespace Platform.Uuid {
	[ExternLibrary( Image = "/usr/lib/libuuid.so" )]
	public static partial struct UuidApi {
		public extern static void uuid_clear( Guid& value );
		public extern static int uuid_compare( Guid& value1, Guid& value2 );
		public extern static void uuid_copy( Guid& dst, Guid& src );
		public extern static void uuid_generate( Guid& value );
		public extern static void uuid_generate_random( Guid& value );
		public extern static void uuid_generate_time( Guid& value );
		public extern static int uuid_is_null( Guid& value );
		public extern static int uuid_parse( CUtf8String text, Guid& value );
		public extern static int uuid_time( Guid& value, Platform.Libc.timeval& time );
		public extern static int uuid_type( Guid& value );
		public extern static void uuid_unparse( Guid& value, byte* out );
		public extern static int uuid_variant( Guid& value );
	}
}