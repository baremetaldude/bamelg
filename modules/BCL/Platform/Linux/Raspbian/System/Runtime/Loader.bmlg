//
// Created by Eugeny Grishul
//
// See license at http://bamelg.com/license.txt
//

using System.Runtime.InteropServices;

using Platform.Libc;

namespace System.Runtime {
	public static partial class Loader {
		internal static Elf32_auxv_t* _auxVector;

		[BackendSymbol( Name = "main" )]
		public static int PlatformEntryPoint( int parameterCount, CUtf8String* parameters, CUtf8String* environmentVariables ) {
			Environment.CommandLine = new[parameterCount] Utf8String;
			for( var i = 0; i < parameterCount; ++i ) {
				Environment.CommandLine[i] = ( Utf8String ) parameters[i];
			}

			int environmentVariableCount = 0;
			for( var i = 0; ; ++i ) {
				if( environmentVariables[i] == CUtf8String.Null ) break;

				++environmentVariableCount;
			}

			_auxVector = bitcast<Elf32_auxv_t*>( &environmentVariables[environmentVariableCount + 1] );

			EntryPoint();
			System.Threading.ThreadPool.Terminate(); // wait for pending tasks

			return Environment.ExitCode;
		}
	}
}