//
// Created by Eugeny Grishul
//
// See license at http://bamelg.com/license.txt
//

using System;

using Platform.Libc;

namespace Platform.Kernel {
	public struct EventHandle : IOHandle {
		public static new thistype Invalid { get { return bitcast<thistype>( basetype.Invalid ); } }

		public EventHandle()
			: this( 0 ) { }

		public EventHandle( uint value, bool nonBlock = true ) { LibcApi.Assert( this = LibcApi.eventfd( value, ( nonBlock ? EventHandleCreateFlag.EFD_NONBLOCK : EventHandleCreateFlag.None ) | EventHandleCreateFlag.EFD_CLOEXEC ) ); }

		public ulong Wait() {
			ulong result;
			LibcApi.AssertErrno( LibcApi.read( this, &result, sizeof( result ) ) );
			return result;
		}

		public void Notify() { Notify( 1 ); }

		public void Notify( ulong value ) {
			LibcApi.AssertErrno( LibcApi.write( this, &value, sizeof( value ) ) );
		}
	}
}