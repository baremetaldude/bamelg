//
// Created by Eugeny Grishul
//
// See license at http://bamelg.com/license.txt
//

using System;
using System.Runtime;

using Platform.Libc;

namespace Platform.Threading {
	[StructLayoutSequential]
	public partial struct ThreadControlBlock { // layout depends on actual libc implementation of pthreads
		public thistype* Self;
		public void* dtv;
		public pthread_t Thread;
		public int MultipleThreads;
		public uintptr VdsoSyscall;
		public uintptr StackGuard;
		public uintptr PointerGuard;
		public int GScopeFlag;

		public static thistype& Current {
			get {
				return *( thistype* ) Memory.LoadPointer( Memory.LlvmAddressSpace.X86_FS, ( uintptr ) memberinfo( Self ).ByteOffset );
			}
		}

		public static pthread_t CurrentThread {
			get {
				return bitcast<pthread_t>( Memory.LoadPointer( Memory.LlvmAddressSpace.X86_FS, ( uintptr ) memberinfo( Thread ).ByteOffset ) );
			}
		}
	}
}