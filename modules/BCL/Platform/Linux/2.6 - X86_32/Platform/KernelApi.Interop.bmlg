//
// Created by Eugeny Grishul
//
// See license at http://bamelg.com/license.txt
//

using System;
using System.Runtime.InteropServices;

namespace Platform.Kernel {
	public static partial struct KernelApi {
		public const int _LINUX_CAPABILITY_VERSION = 429392688;

	}
	public enum IoctlCommand : uint {
		TIOCPKT_DATA =        0,
		TIOCPKT_FLUSHREAD =   1,
		TIOCPKT_FLUSHWRITE =  2,
		TIOCPKT_STOP =        4,
		TIOCPKT_START =       8,
		TIOCPKT_NOSTOP =     16,
		TIOCPKT_DOSTOP =     32,
		TCGETS =          21505,
		TCSETS =          21506,
		TCSETSW =         21507,
		TCSETSF =         21508,
		TCGETA =          21509,
		TCSETA =          21510,
		TCSETAW =         21511,
		TCSETAF =         21512,
		TCSBRK =          21513,
		TCXONC =          21514,
		TCFLSH =          21515,
		TIOCEXCL =        21516,
		TIOCNXCL =        21517,
		TIOCSCTTY =       21518,
		TIOCGPGRP =       21519,
		TIOCSPGRP =       21520,
		TIOCOUTQ =        21521,
		TIOCSTI =         21522,
		TIOCGWINSZ =      21523,
		TIOCSWINSZ =      21524,
		TIOCMGET =        21525,
		TIOCMBIS =        21526,
		TIOCMBIC =        21527,
		TIOCMSET =        21528,
		TIOCGSOFTCAR =    21529,
		TIOCSSOFTCAR =    21530,
		FIONREAD =        21531,
		TIOCINQ =         21531,
		TIOCLINUX =       21532,
		TIOCCONS =        21533,
		TIOCGSERIAL =     21534,
		TIOCSSERIAL =     21535,
		TIOCPKT =         21536,
		FIONBIO =         21537,
		TIOCNOTTY =       21538,
		TIOCSETD =        21539,
		TIOCGETD =        21540,
		TCSBRKP =         21541,
		TIOCSBRK =        21543,
		TIOCCBRK =        21544,
		TIOCGSID =        21545,
		FIONCLEX =        21584,
		FIOCLEX =         21585,
		FIOASYNC =        21586,
		TIOCSERCONFIG =   21587,
		TIOCSERGWILD =    21588,
		TIOCSERSWILD =    21589,
		TIOCGLCKTRMIOS =  21590,
		TIOCSLCKTRMIOS =  21591,
		TIOCSERGSTRUCT =  21592,
		TIOCSERGETLSR =   21593,
		TIOCSERGETMULTI = 21594,
		TIOCSERSETMULTI = 21595,
		TIOCMIWAIT =      21596,
		TIOCGICOUNT =     21597,
		FIOQSIZE =        21600,
	}
	public enum ProcessControlActions : int {
		PR_SET_PTRACER_ANY =          -1,
		PR_ENDIAN_BIG =                0,
		PR_FP_EXC_DISABLED =           0,
		PR_MCE_KILL_CLEAR =            0,
		PR_MCE_KILL_LATE =             0,
		PR_SPEC_NOT_AFFECTED =         0,
		PR_SPEC_STORE_BYPASS =         0,
		PR_TIMING_STATISTICAL =        0,
		PR_CAP_AMBIENT_IS_SET =        1,
		PR_ENDIAN_LITTLE =             1,
		PR_FP_EXC_NONRECOV =           1,
		PR_FP_MODE_FR =                1,
		PR_FPEMU_NOPRINT =             1,
		PR_MCE_KILL_EARLY =            1,
		PR_MCE_KILL_SET =              1,
		PR_SET_MM_START_CODE =         1,
		PR_SET_PDEATHSIG =             1,
		PR_SPEC_PRCTL =                1,
		PR_TIMING_TIMESTAMP =          1,
		PR_TSC_ENABLE =                1,
		PR_UNALIGN_NOPRINT =           1,
		PR_CAP_AMBIENT_RAISE =         2,
		PR_ENDIAN_PPC_LITTLE =         2,
		PR_FP_EXC_ASYNC =              2,
		PR_FP_MODE_FRE =               2,
		PR_FPEMU_SIGFPE =              2,
		PR_GET_PDEATHSIG =             2,
		PR_MCE_KILL_DEFAULT =          2,
		PR_SET_MM_END_CODE =           2,
		PR_SPEC_ENABLE =               2,
		PR_TSC_SIGSEGV =               2,
		PR_UNALIGN_SIGBUS =            2,
		PR_CAP_AMBIENT_LOWER =         3,
		PR_FP_EXC_PRECISE =            3,
		PR_GET_DUMPABLE =              3,
		PR_SET_MM_START_DATA =         3,
		PR_CAP_AMBIENT_CLEAR_ALL =     4,
		PR_SET_DUMPABLE =              4,
		PR_SET_MM_END_DATA =           4,
		PR_SPEC_DISABLE =              4,
		PR_GET_UNALIGN =               5,
		PR_SET_MM_START_STACK =        5,
		PR_SET_MM_START_BRK =          6,
		PR_SET_UNALIGN =               6,
		PR_GET_KEEPCAPS =              7,
		PR_SET_MM_BRK =                7,
		PR_SET_KEEPCAPS =              8,
		PR_SET_MM_ARG_START =          8,
		PR_SPEC_FORCE_DISABLE =        8,
		PR_GET_FPEMU =                 9,
		PR_SET_MM_ARG_END =            9,
		PR_SET_FPEMU =                10,
		PR_SET_MM_ENV_START =         10,
		PR_GET_FPEXC =                11,
		PR_SET_MM_ENV_END =           11,
		PR_SET_FPEXC =                12,
		PR_SET_MM_AUXV =              12,
		PR_GET_TIMING =               13,
		PR_SET_MM_EXE_FILE =          13,
		PR_SET_MM_MAP =               14,
		PR_SET_TIMING =               14,
		PR_SET_MM_MAP_SIZE =          15,
		PR_SET_NAME =                 15,
		PR_GET_NAME =                 16,
		PR_GET_ENDIAN =               19,
		PR_SET_ENDIAN =               20,
		PR_GET_SECCOMP =              21,
		PR_SET_SECCOMP =              22,
		PR_CAPBSET_READ =             23,
		PR_CAPBSET_DROP =             24,
		PR_GET_TSC =                  25,
		PR_SET_TSC =                  26,
		PR_GET_SECUREBITS =           27,
		PR_SET_SECUREBITS =           28,
		PR_SET_TIMERSLACK =           29,
		PR_GET_TIMERSLACK =           30,
		PR_TASK_PERF_EVENTS_DISABLE = 31,
		PR_TASK_PERF_EVENTS_ENABLE =  32,
		PR_MCE_KILL =                 33,
		PR_MCE_KILL_GET =             34,
		PR_SET_MM =                   35,
		PR_SET_CHILD_SUBREAPER =      36,
		PR_GET_CHILD_SUBREAPER =      37,
		PR_SET_NO_NEW_PRIVS =         38,
		PR_GET_NO_NEW_PRIVS =         39,
		PR_GET_TID_ADDRESS =          40,
		PR_SET_THP_DISABLE =          41,
		PR_GET_THP_DISABLE =          42,
		PR_MPX_ENABLE_MANAGEMENT =    43,
		PR_MPX_DISABLE_MANAGEMENT =   44,
		PR_SET_FP_MODE =              45,
		PR_GET_FP_MODE =              46,
		PR_CAP_AMBIENT =              47,
		PR_SVE_SET_VL =               50,
		PR_SVE_GET_VL =               51,
		PR_GET_SPECULATION_CTRL =     52,
		PR_SET_SPECULATION_CTRL =     53,
		PR_FP_EXC_SW_ENABLE =        128,
		PR_SVE_VL_LEN_MASK =       65535,
		PR_FP_EXC_DIV =            65536,
		PR_FP_EXC_OVF =           131072,
		PR_SVE_VL_INHERIT =       131072,
		PR_FP_EXC_UND =           262144,
		PR_SVE_SET_VL_ONEXEC =    262144,
		PR_FP_EXC_RES =           524288,
		PR_FP_EXC_INV =          1048576,
		PR_SET_PTRACER =      1499557217,
	}
	public enum SocketProperty : int {
		SO_DEBUG =                          1,
		SO_REUSEADDR =                      2,
		SO_TYPE =                           3,
		SO_ERROR =                          4,
		SO_DONTROUTE =                      5,
		SO_BROADCAST =                      6,
		SO_SNDBUF =                         7,
		SO_RCVBUF =                         8,
		SO_KEEPALIVE =                      9,
		SO_OOBINLINE =                     10,
		SO_NO_CHECK =                      11,
		SO_PRIORITY =                      12,
		SO_LINGER =                        13,
		SO_BSDCOMPAT =                     14,
		SO_REUSEPORT =                     15,
		SO_PASSCRED =                      16,
		SO_PEERCRED =                      17,
		SO_RCVLOWAT =                      18,
		SO_SNDLOWAT =                      19,
		SO_RCVTIMEO =                      20,
		SO_SNDTIMEO =                      21,
		SO_SECURITY_AUTHENTICATION =       22,
		SO_SECURITY_ENCRYPTION_TRANSPORT = 23,
		SO_SECURITY_ENCRYPTION_NETWORK =   24,
		SO_BINDTODEVICE =                  25,
		SO_ATTACH_FILTER =                 26,
		SO_GET_FILTER =                    26,
		SO_DETACH_BPF =                    27,
		SO_DETACH_FILTER =                 27,
		SO_PEERNAME =                      28,
		SO_TIMESTAMP =                     29,
		SO_ACCEPTCONN =                    30,
		SO_PEERSEC =                       31,
		SO_SNDBUFFORCE =                   32,
		SO_RCVBUFFORCE =                   33,
		SO_PASSSEC =                       34,
		SO_TIMESTAMPNS =                   35,
		SO_MARK =                          36,
		SO_TIMESTAMPING =                  37,
		SO_PROTOCOL =                      38,
		SO_DOMAIN =                        39,
		SO_RXQ_OVFL =                      40,
		SO_WIFI_STATUS =                   41,
		SO_PEEK_OFF =                      42,
		SO_NOFCS =                         43,
		SO_LOCK_FILTER =                   44,
		SO_SELECT_ERR_QUEUE =              45,
		SO_BUSY_POLL =                     46,
		SO_MAX_PACING_RATE =               47,
		SO_BPF_EXTENSIONS =                48,
		SO_INCOMING_CPU =                  49,
		SO_ATTACH_BPF =                    50,
		SO_ATTACH_REUSEPORT_CBPF =         51,
		SO_ATTACH_REUSEPORT_EBPF =         52,
		SO_CNX_ADVICE =                    53,
		SO_MEMINFO =                       55,
		SO_INCOMING_NAPI_ID =              56,
		SO_COOKIE =                        57,
		SO_PEERGROUPS =                    59,
		SO_ZEROCOPY =                      60,
	}
	public enum SocketPropertyGroup : uint {
		SOL_IP =          0,
		SOL_SOCKET =      1,
		SOL_TCP =         6,
		SOL_UDP =        17,
		SOL_IPV6 =       41,
		SOL_ICMPV6 =     58,
		SOL_SCTP =      132,
		SOL_RAW =       255,
		SOL_IPX =       256,
		SOL_AX25 =      257,
		SOL_ATALK =     258,
		SOL_NETROM =    259,
		SOL_ROSE =      260,
		SOL_DECNET =    261,
		SOL_X25 =       262,
		SOL_PACKET =    263,
		SOL_ATM =       264,
		SOL_AAL =       265,
		SOL_IRDA =      266,
		SOL_NETBEUI =   267,
		SOL_LLC =       268,
		SOL_DCCP =      269,
		SOL_NETLINK =   270,
		SOL_TIPC =      271,
		SOL_RXRPC =     272,
		SOL_PPPOL2TP =  273,
		SOL_BLUETOOTH = 274,
		SOL_PNPIPE =    275,
		SOL_RDS =       276,
		SOL_IUCV =      277,
		SOL_CAIF =      278,
		SOL_ALG =       279,
		SOL_NFC =       280,
		SOL_KCM =       281,
		SOL_TLS =       282,
	}
	public enum SocketPropertyTcp : int {
		TCP_COOKIE_IN_ALWAYS =      1,
		TCP_MD5SIG_FLAG_PREFIX =    1,
		TCP_NODELAY =               1,
		TCP_COOKIE_OUT_NEVER =      2,
		TCP_MAXSEG =                2,
		TCP_CORK =                  3,
		TCP_KEEPIDLE =              4,
		TCP_S_DATA_IN =             4,
		TCP_KEEPINTVL =             5,
		TCP_KEEPCNT =               6,
		TCP_SYNCNT =                7,
		TCP_COOKIE_MIN =            8,
		TCP_LINGER2 =               8,
		TCP_S_DATA_OUT =            8,
		TCP_DEFER_ACCEPT =          9,
		TCP_WINDOW_CLAMP =         10,
		TCP_INFO =                 11,
		TCP_QUICKACK =             12,
		TCP_CONGESTION =           13,
		TCP_MAX_WINSHIFT =         14,
		TCP_MD5SIG =               14,
		TCP_COOKIE_TRANSACTIONS =  15,
		TCP_COOKIE_MAX =           16,
		TCP_THIN_LINEAR_TIMEOUTS = 16,
		TCP_THIN_DUPACK =          17,
		TCP_USER_TIMEOUT =         18,
		TCP_REPAIR =               19,
		TCP_REPAIR_QUEUE =         20,
		TCP_QUEUE_SEQ =            21,
		TCP_REPAIR_OPTIONS =       22,
		TCP_FASTOPEN =             23,
		TCP_TIMESTAMP =            24,
		TCP_NOTSENT_LOWAT =        25,
		TCP_CC_INFO =              26,
		TCP_SAVE_SYN =             27,
		TCP_SAVED_SYN =            28,
		TCP_REPAIR_WINDOW =        29,
		TCP_FASTOPEN_CONNECT =     30,
		TCP_ULP =                  31,
		TCP_COOKIE_PAIR_SIZE =     32,
		TCP_MD5SIG_EXT =           32,
		TCP_FASTOPEN_KEY =         33,
		TCP_FASTOPEN_NO_COOKIE =   34,
		TCP_MD5SIG_MAXKEYLEN =     80,
		TCP_MSS =                 512,
		TCP_MSS_DEFAULT =         536,
		TCP_MSS_DESIRED =        1220,
		TCP_MAXWIN =            65535,
	}
	public enum SystemCall : uint {
		restart_syscall =          0,
		exit =                     1,
		fork =                     2,
		read =                     3,
		write =                    4,
		open =                     5,
		close =                    6,
		waitpid =                  7,
		creat =                    8,
		link =                     9,
		unlink =                  10,
		execve =                  11,
		chdir =                   12,
		time =                    13,
		mknod =                   14,
		chmod =                   15,
		lchown =                  16,
		@break =                  17,
		oldstat =                 18,
		lseek =                   19,
		getpid =                  20,
		mount =                   21,
		umount =                  22,
		setuid =                  23,
		getuid =                  24,
		stime =                   25,
		ptrace =                  26,
		alarm =                   27,
		oldfstat =                28,
		pause =                   29,
		utime =                   30,
		stty =                    31,
		gtty =                    32,
		access =                  33,
		nice =                    34,
		ftime =                   35,
		sync =                    36,
		kill =                    37,
		rename =                  38,
		mkdir =                   39,
		rmdir =                   40,
		dup =                     41,
		pipe =                    42,
		times =                   43,
		prof =                    44,
		brk =                     45,
		setgid =                  46,
		getgid =                  47,
		signal =                  48,
		geteuid =                 49,
		getegid =                 50,
		acct =                    51,
		umount2 =                 52,
		lock =                    53,
		ioctl =                   54,
		fcntl =                   55,
		mpx =                     56,
		setpgid =                 57,
		ulimit =                  58,
		oldolduname =             59,
		umask =                   60,
		chroot =                  61,
		ustat =                   62,
		dup2 =                    63,
		getppid =                 64,
		getpgrp =                 65,
		setsid =                  66,
		sigaction =               67,
		sgetmask =                68,
		ssetmask =                69,
		setreuid =                70,
		setregid =                71,
		sigsuspend =              72,
		sigpending =              73,
		sethostname =             74,
		setrlimit =               75,
		getrlimit =               76,
		getrusage =               77,
		gettimeofday =            78,
		settimeofday =            79,
		getgroups =               80,
		setgroups =               81,
		select =                  82,
		symlink =                 83,
		oldlstat =                84,
		readlink =                85,
		uselib =                  86,
		swapon =                  87,
		reboot =                  88,
		readdir =                 89,
		mmap =                    90,
		munmap =                  91,
		truncate =                92,
		ftruncate =               93,
		fchmod =                  94,
		fchown =                  95,
		getpriority =             96,
		setpriority =             97,
		profil =                  98,
		statfs =                  99,
		fstatfs =                100,
		ioperm =                 101,
		socketcall =             102,
		syslog =                 103,
		setitimer =              104,
		getitimer =              105,
		stat =                   106,
		lstat =                  107,
		fstat =                  108,
		olduname =               109,
		iopl =                   110,
		vhangup =                111,
		idle =                   112,
		vm86old =                113,
		wait4 =                  114,
		swapoff =                115,
		sysinfo =                116,
		ipc =                    117,
		fsync =                  118,
		sigreturn =              119,
		clone =                  120,
		setdomainname =          121,
		uname =                  122,
		modify_ldt =             123,
		adjtimex =               124,
		mprotect =               125,
		sigprocmask =            126,
		create_module =          127,
		init_module =            128,
		delete_module =          129,
		get_kernel_syms =        130,
		quotactl =               131,
		getpgid =                132,
		fchdir =                 133,
		bdflush =                134,
		sysfs =                  135,
		personality =            136,
		afs_syscall =            137,
		setfsuid =               138,
		setfsgid =               139,
		_llseek =                140,
		getdents =               141,
		_newselect =             142,
		flock =                  143,
		msync =                  144,
		readv =                  145,
		writev =                 146,
		getsid =                 147,
		fdatasync =              148,
		_sysctl =                149,
		mlock =                  150,
		munlock =                151,
		mlockall =               152,
		munlockall =             153,
		sched_setparam =         154,
		sched_getparam =         155,
		sched_setscheduler =     156,
		sched_getscheduler =     157,
		sched_yield =            158,
		sched_get_priority_max = 159,
		sched_get_priority_min = 160,
		sched_rr_get_interval =  161,
		nanosleep =              162,
		mremap =                 163,
		setresuid =              164,
		getresuid =              165,
		vm86 =                   166,
		query_module =           167,
		poll =                   168,
		nfsservctl =             169,
		setresgid =              170,
		getresgid =              171,
		prctl =                  172,
		rt_sigreturn =           173,
		rt_sigaction =           174,
		rt_sigprocmask =         175,
		rt_sigpending =          176,
		rt_sigtimedwait =        177,
		rt_sigqueueinfo =        178,
		rt_sigsuspend =          179,
		pread64 =                180,
		pwrite64 =               181,
		chown =                  182,
		getcwd =                 183,
		capget =                 184,
		capset =                 185,
		sigaltstack =            186,
		sendfile =               187,
		getpmsg =                188,
		putpmsg =                189,
		vfork =                  190,
		ugetrlimit =             191,
		mmap2 =                  192,
		truncate64 =             193,
		ftruncate64 =            194,
		stat64 =                 195,
		lstat64 =                196,
		fstat64 =                197,
		lchown32 =               198,
		getuid32 =               199,
		getgid32 =               200,
		geteuid32 =              201,
		getegid32 =              202,
		setreuid32 =             203,
		setregid32 =             204,
		getgroups32 =            205,
		setgroups32 =            206,
		fchown32 =               207,
		setresuid32 =            208,
		getresuid32 =            209,
		setresgid32 =            210,
		getresgid32 =            211,
		chown32 =                212,
		setuid32 =               213,
		setgid32 =               214,
		setfsuid32 =             215,
		setfsgid32 =             216,
		pivot_root =             217,
		mincore =                218,
		madvise =                219,
		getdents64 =             220,
		fcntl64 =                221,
		gettid =                 224,
		readahead =              225,
		setxattr =               226,
		lsetxattr =              227,
		fsetxattr =              228,
		getxattr =               229,
		lgetxattr =              230,
		fgetxattr =              231,
		listxattr =              232,
		llistxattr =             233,
		flistxattr =             234,
		removexattr =            235,
		lremovexattr =           236,
		fremovexattr =           237,
		tkill =                  238,
		sendfile64 =             239,
		futex =                  240,
		sched_setaffinity =      241,
		sched_getaffinity =      242,
		set_thread_area =        243,
		get_thread_area =        244,
		io_setup =               245,
		io_destroy =             246,
		io_getevents =           247,
		io_submit =              248,
		io_cancel =              249,
		fadvise64 =              250,
		exit_group =             252,
		lookup_dcookie =         253,
		epoll_create =           254,
		epoll_ctl =              255,
		epoll_wait =             256,
		remap_file_pages =       257,
		set_tid_address =        258,
		timer_create =           259,
		timer_settime =          260,
		timer_gettime =          261,
		timer_getoverrun =       262,
		timer_delete =           263,
		clock_settime =          264,
		clock_gettime =          265,
		clock_getres =           266,
		clock_nanosleep =        267,
		statfs64 =               268,
		fstatfs64 =              269,
		tgkill =                 270,
		utimes =                 271,
		fadvise64_64 =           272,
		vserver =                273,
		mbind =                  274,
		get_mempolicy =          275,
		set_mempolicy =          276,
		mq_open =                277,
		mq_unlink =              278,
		mq_timedsend =           279,
		mq_timedreceive =        280,
		mq_notify =              281,
		mq_getsetattr =          282,
		kexec_load =             283,
		waitid =                 284,
		add_key =                286,
		request_key =            287,
		keyctl =                 288,
		ioprio_set =             289,
		ioprio_get =             290,
		inotify_init =           291,
		inotify_add_watch =      292,
		inotify_rm_watch =       293,
		migrate_pages =          294,
		openat =                 295,
		mkdirat =                296,
		mknodat =                297,
		fchownat =               298,
		futimesat =              299,
		fstatat64 =              300,
		unlinkat =               301,
		renameat =               302,
		linkat =                 303,
		symlinkat =              304,
		readlinkat =             305,
		fchmodat =               306,
		faccessat =              307,
		pselect6 =               308,
		ppoll =                  309,
		unshare =                310,
		set_robust_list =        311,
		get_robust_list =        312,
		splice =                 313,
		sync_file_range =        314,
		tee =                    315,
		vmsplice =               316,
		move_pages =             317,
		getcpu =                 318,
		epoll_pwait =            319,
		utimensat =              320,
		signalfd =               321,
		timerfd_create =         322,
		eventfd =                323,
		fallocate =              324,
		timerfd_settime =        325,
		timerfd_gettime =        326,
		signalfd4 =              327,
		eventfd2 =               328,
		epoll_create1 =          329,
		dup3 =                   330,
		pipe2 =                  331,
		inotify_init1 =          332,
		preadv =                 333,
		pwritev =                334,
		rt_tgsigqueueinfo =      335,
		perf_event_open =        336,
		recvmmsg =               337,
		fanotify_init =          338,
		fanotify_mark =          339,
		prlimit64 =              340,
		name_to_handle_at =      341,
		open_by_handle_at =      342,
		clock_adjtime =          343,
		syncfs =                 344,
		sendmmsg =               345,
		setns =                  346,
		process_vm_readv =       347,
		process_vm_writev =      348,
		kcmp =                   349,
		finit_module =           350,
		sched_setattr =          351,
		sched_getattr =          352,
		renameat2 =              353,
		seccomp =                354,
		getrandom =              355,
		memfd_create =           356,
		bpf =                    357,
		execveat =               358,
		socket =                 359,
		socketpair =             360,
		bind =                   361,
		connect =                362,
		listen =                 363,
		accept4 =                364,
		getsockopt =             365,
		setsockopt =             366,
		getsockname =            367,
		getpeername =            368,
		sendto =                 369,
		sendmsg =                370,
		recvfrom =               371,
		recvmsg =                372,
		shutdown =               373,
		userfaultfd =            374,
		membarrier =             375,
		mlock2 =                 376,
		copy_file_range =        377,
		preadv2 =                378,
		pwritev2 =               379,
		pkey_mprotect =          380,
		pkey_alloc =             381,
		pkey_free =              382,
		statx =                  383,
		arch_prctl =             384,
		io_pgetevents =          385,
		rseq =                   386,
	}
	public enum SystemError : int {
		[ErrorCodeSuccess]
		None =              0,
		EPERM =             1,
		ENOENT =            2,
		ESRCH =             3,
		EINTR =             4,
		EIO =               5,
		ENXIO =             6,
		E2BIG =             7,
		ENOEXEC =           8,
		EBADF =             9,
		ECHILD =           10,
		EAGAIN =           11,
		EWOULDBLOCK =      11,
		ENOMEM =           12,
		EACCES =           13,
		EFAULT =           14,
		ENOTBLK =          15,
		EBUSY =            16,
		EEXIST =           17,
		EXDEV =            18,
		ENODEV =           19,
		ENOTDIR =          20,
		EISDIR =           21,
		EINVAL =           22,
		ENFILE =           23,
		EMFILE =           24,
		ENOTTY =           25,
		ETXTBSY =          26,
		EFBIG =            27,
		ENOSPC =           28,
		ESPIPE =           29,
		EROFS =            30,
		EMLINK =           31,
		EPIPE =            32,
		EDOM =             33,
		ERANGE =           34,
		EDEADLK =          35,
		EDEADLOCK =        35,
		ENAMETOOLONG =     36,
		ENOLCK =           37,
		ENOSYS =           38,
		ENOTEMPTY =        39,
		ELOOP =            40,
		ENOMSG =           42,
		EIDRM =            43,
		ECHRNG =           44,
		EL2NSYNC =         45,
		EL3HLT =           46,
		EL3RST =           47,
		ELNRNG =           48,
		EUNATCH =          49,
		ENOCSI =           50,
		EL2HLT =           51,
		EBADE =            52,
		EBADR =            53,
		EXFULL =           54,
		ENOANO =           55,
		EBADRQC =          56,
		EBADSLT =          57,
		EBFONT =           59,
		ENOSTR =           60,
		ENODATA =          61,
		ETIME =            62,
		ENOSR =            63,
		ENONET =           64,
		ENOPKG =           65,
		EREMOTE =          66,
		ENOLINK =          67,
		EADV =             68,
		ESRMNT =           69,
		ECOMM =            70,
		EPROTO =           71,
		EMULTIHOP =        72,
		EDOTDOT =          73,
		EBADMSG =          74,
		EOVERFLOW =        75,
		ENOTUNIQ =         76,
		EBADFD =           77,
		EREMCHG =          78,
		ELIBACC =          79,
		ELIBBAD =          80,
		ELIBSCN =          81,
		ELIBMAX =          82,
		ELIBEXEC =         83,
		EILSEQ =           84,
		ERESTART =         85,
		ESTRPIPE =         86,
		EUSERS =           87,
		ENOTSOCK =         88,
		EDESTADDRREQ =     89,
		EMSGSIZE =         90,
		EPROTOTYPE =       91,
		ENOPROTOOPT =      92,
		EPROTONOSUPPORT =  93,
		ESOCKTNOSUPPORT =  94,
		EOPNOTSUPP =       95,
		EPFNOSUPPORT =     96,
		EAFNOSUPPORT =     97,
		EADDRINUSE =       98,
		EADDRNOTAVAIL =    99,
		ENETDOWN =        100,
		ENETUNREACH =     101,
		ENETRESET =       102,
		ECONNABORTED =    103,
		ECONNRESET =      104,
		ENOBUFS =         105,
		EISCONN =         106,
		ENOTCONN =        107,
		ESHUTDOWN =       108,
		ETOOMANYREFS =    109,
		ETIMEDOUT =       110,
		ECONNREFUSED =    111,
		EHOSTDOWN =       112,
		EHOSTUNREACH =    113,
		EALREADY =        114,
		EINPROGRESS =     115,
		ESTALE =          116,
		EUCLEAN =         117,
		ENOTNAM =         118,
		ENAVAIL =         119,
		EISNAM =          120,
		EREMOTEIO =       121,
		EDQUOT =          122,
		ENOMEDIUM =       123,
		EMEDIUMTYPE =     124,
		ECANCELED =       125,
		ENOKEY =          126,
		EKEYEXPIRED =     127,
		EKEYREVOKED =     128,
		EKEYREJECTED =    129,
		EOWNERDEAD =      130,
		ENOTRECOVERABLE = 131,
		ERFKILL =         132,
		EHWPOISON =       133,
	}
	public enum ThreadCapabilities : uint {
		CAP_CHOWN =             0,
		CAP_DAC_OVERRIDE =      1,
		CAP_DAC_READ_SEARCH =   2,
		CAP_FOWNER =            3,
		CAP_FSETID =            4,
		CAP_KILL =              5,
		CAP_SETGID =            6,
		CAP_SETUID =            7,
		CAP_SETPCAP =           8,
		CAP_LINUX_IMMUTABLE =   9,
		CAP_NET_BIND_SERVICE = 10,
		CAP_NET_BROADCAST =    11,
		CAP_NET_ADMIN =        12,
		CAP_NET_RAW =          13,
		CAP_IPC_LOCK =         14,
		CAP_IPC_OWNER =        15,
		CAP_SYS_MODULE =       16,
		CAP_SYS_RAWIO =        17,
		CAP_SYS_CHROOT =       18,
		CAP_SYS_PTRACE =       19,
		CAP_SYS_PACCT =        20,
		CAP_SYS_ADMIN =        21,
		CAP_SYS_BOOT =         22,
		CAP_SYS_NICE =         23,
		CAP_SYS_RESOURCE =     24,
		CAP_SYS_TIME =         25,
		CAP_SYS_TTY_CONFIG =   26,
		CAP_MKNOD =            27,
		CAP_LEASE =            28,
		CAP_AUDIT_WRITE =      29,
		CAP_AUDIT_CONTROL =    30,
		CAP_SETFCAP =          31,
		CAP_MAC_OVERRIDE =     32,
		CAP_MAC_ADMIN =        33,
		CAP_SYSLOG =           34,
		CAP_WAKE_ALARM =       35,
		CAP_BLOCK_SUSPEND =    36,
		CAP_AUDIT_READ =       37,
		CAP_LAST_CAP =         37,
	}
	[ExplicitSize( Size = 128 )]
	[Alignment( Boundary = 4 )]
	public partial struct __kernel_fd_set {
		[ExplicitOffset( Offset = 0 )]
		public uintptr[32] fds_bits;
	}
	[ExplicitSize( Size = 8 )]
	[Alignment( Boundary = 4 )]
	public partial struct __kernel_fsid_t {
		[ExplicitOffset( Offset = 0 )]
		public int[2] val;
	}
	[ExplicitSize( Size = 128 )]
	[Alignment( Boundary = 4 )]
	public partial struct __kernel_sockaddr_storage {
		[ExplicitOffset( Offset = 0 )]
		public ushort ss_family;
		[ExplicitOffset( Offset = 2 )]
		public sbyte[126] __data;
	}
	[ExplicitSize( Size = 4 )]
	[Alignment( Boundary = 2 )]
	public partial struct atalk_addr {
		[ExplicitOffset( Offset = 0 )]
		public ushort s_net;
		[ExplicitOffset( Offset = 2 )]
		public byte s_node;
	}
	[ExplicitSize( Size = 6 )]
	[Alignment( Boundary = 2 )]
	public partial struct atalk_netrange {
		[ExplicitOffset( Offset = 0 )]
		public byte nr_phase;
		[ExplicitOffset( Offset = 2 )]
		public ushort nr_firstnet;
		[ExplicitOffset( Offset = 4 )]
		public ushort nr_lastnet;
	}
	[ExplicitSize( Size = 12 )]
	[Alignment( Boundary = 4 )]
	public partial struct cap_user_data_t {
		[ExplicitOffset( Offset = 0 )]
		public uint effective;
		[ExplicitOffset( Offset = 4 )]
		public uint permitted;
		[ExplicitOffset( Offset = 8 )]
		public uint inheritable;
	}
	[ExplicitSize( Size = 8 )]
	[Alignment( Boundary = 4 )]
	public partial struct cap_user_header_t {
		[ExplicitOffset( Offset = 0 )]
		public uint version;
		[ExplicitOffset( Offset = 4 )]
		public int pid;
	}
	[ExplicitSize( Size = 100 )]
	[Alignment( Boundary = 4 )]
	public partial struct prctl_mm_map {
		[ExplicitOffset( Offset = 0 )]
		public ulong start_code;
		[ExplicitOffset( Offset = 8 )]
		public ulong end_code;
		[ExplicitOffset( Offset = 16 )]
		public ulong start_data;
		[ExplicitOffset( Offset = 24 )]
		public ulong end_data;
		[ExplicitOffset( Offset = 32 )]
		public ulong start_brk;
		[ExplicitOffset( Offset = 40 )]
		public ulong brk;
		[ExplicitOffset( Offset = 48 )]
		public ulong start_stack;
		[ExplicitOffset( Offset = 56 )]
		public ulong arg_start;
		[ExplicitOffset( Offset = 64 )]
		public ulong arg_end;
		[ExplicitOffset( Offset = 72 )]
		public ulong env_start;
		[ExplicitOffset( Offset = 80 )]
		public ulong env_end;
		[ExplicitOffset( Offset = 88 )]
		public ulong* auxv;
		[ExplicitOffset( Offset = 92 )]
		public uint auxv_size;
		[ExplicitOffset( Offset = 96 )]
		public uint exe_fd;
	}
	[ExplicitSize( Size = 16 )]
	[Alignment( Boundary = 2 )]
	public partial struct sockaddr_at {
		[ExplicitOffset( Offset = 0 )]
		public ushort sat_family;
		[ExplicitOffset( Offset = 2 )]
		public byte sat_port;
		[ExplicitOffset( Offset = 4 )]
		public atalk_addr sat_addr;
		[ExplicitOffset( Offset = 8 )]
		public sbyte[8] sat_zero;
	}
	[ExplicitSize( Size = 20 )]
	[Alignment( Boundary = 4 )]
	public partial struct vfs_cap_data {
		[ExplicitOffset( Offset = 0 )]
		public uint magic_etc;
		[ExplicitOffset( Offset = 4 )]
		public UnnamedStruct_D50D5009[2] data;
	}
	[ExplicitSize( Size = 24 )]
	[Alignment( Boundary = 4 )]
	public partial struct vfs_ns_cap_data {
		[ExplicitOffset( Offset = 0 )]
		public uint magic_etc;
		[ExplicitOffset( Offset = 4 )]
		public UnnamedStruct_D50D4FE8[2] data;
		[ExplicitOffset( Offset = 20 )]
		public uint rootid;
	}
	[ExplicitSize( Size = 8 )]
	[Alignment( Boundary = 4 )]
	public partial struct UnnamedStruct_D50D4FE8 {
		[ExplicitOffset( Offset = 0 )]
		public uint permitted;
		[ExplicitOffset( Offset = 4 )]
		public uint inheritable;
	}
	[ExplicitSize( Size = 8 )]
	[Alignment( Boundary = 4 )]
	public partial struct UnnamedStruct_D50D5009 {
		[ExplicitOffset( Offset = 0 )]
		public uint permitted;
		[ExplicitOffset( Offset = 4 )]
		public uint inheritable;
	}
}