//
// Created by Eugeny Grishul
//
// See license at http://bamelg.com/license.txt
//

using System;

using Platform.Libc;

namespace Platform.Kernel {
	public struct PipeHandle : IOHandleNonBlocking {
		public const int ReadEnd = 0;
		public const int WriteEnd = 1;

		public static new thistype Invalid { get { return bitcast<thistype>( basetype.Invalid ); } }

		public SystemError WriteByte( byte value ) {
			uint totalTransmitted;
			return Write( totalTransmitted, &value, sizeof( value ) );
		}

		public int PipeSize {
			get {
				int result;
				LibcApi.AssertErrno( result = LibcApi.fcntl( this, FileDescriptorCommand.F_GETPIPE_SZ, 0 ) );
				return result;
			}
			set {
				LibcApi.AssertErrno( LibcApi.fcntl( this, FileDescriptorCommand.F_SETPIPE_SZ, value ) );
			}
		}
	}
}