//
// Created by Eugeny Grishul
//
// See license at http://bamelg.com/license.txt
//
// Designed to use with glibc 2.3.6
//

using System;
using System.Runtime;
using System.Runtime.InteropServices;

using Platform.Kernel;

namespace Platform.Libc {
	public static partial struct PthreadsApi {
		private static Functors.Action __ctype_init = bitcast<Functors.Action>( LoaderApi.dlsym( DynamicLibraryHandle.RTLD_NEXT, "__ctype_init" ) );
		private static Functors.Action __libc_thread_freeres = bitcast<Functors.Action>( LoaderApi.dlsym( DynamicLibraryHandle.RTLD_NEXT, "__libc_thread_freeres" ) );

		[BackendHintKeep]
		[BackendSymbol( Name = "__ctype_init" )]
		public static void ctype_init() {
			__ctype_init();
			System.Runtime.Loader.InitializeTls();
		}

		[BackendHintKeep]
		[BackendSymbol( Name = "__libc_thread_freeres" )]
		public static void libc_thread_freeres() {
			System.Runtime.Loader.FinalizeTls();
			__libc_thread_freeres();
		}

		static PthreadsApi() {
			System.Diagnostics.Debug.Assert( LibcApi.getpagesize() == Memory.DefaultPageSize );
		}
	}
}