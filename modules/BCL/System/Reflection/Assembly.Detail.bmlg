//
// Created by Eugeny Grishul
//
// See license at http://bamelg.com/license.txt
//

namespace System.Reflection {
	public partial struct Assembly {
		public extern static Assembly& GetExecutingAssembly();

		internal static Assembly* _entryAssembly = &GetExecutingAssembly(); // TODO
		public static Assembly& GetEntryAssembly() { return *_entryAssembly; }

		public Version CompilerVersion;
		public long _buildDate;

		public Attribute** Attributes;
		public UserType* UserTypesStart;
		public TemplateUserTypeDefinition* TemplateUserTypesStart;
		public InterfaceType* InterfacesStart;
		public TemplateInterfaceDefinition* TemplateInterfacesStart;
		public FunctorType* FunctorsStart;
		public TemplateFunctorDefinition* TemplateFunctorsStart;
		public DelegateType* DelegatesStart;
		public TemplateDelegateDefinition* TemplateDelegatesStart;
		public EnumType* EnumsStart;
		public PointerType* PointerTypesStart;
		public ReferenceType* ReferenceTypesStart;
		public FixedArrayType* FixedArraysStart;
		public DynamicArrayType* DynamicArraysStart;
		public UserType.Method* MethodsStart;
		public UserType.TemplateMethodDefinition* TemplateMethodsStart;
		public UserType.Field* FieldsStart;
		public UserType.Constant* ConstantsStart;
		public UserType.Property* PropertiesStart;
		public UserType.IndexedProperty* IndexedPropertiesStart;
		public UserType.Event* EventsStart;

		public uint AttributeCount;
		public uint UserTypeCount;
		public uint TemplateUserTypeCount;
		public uint InterfaceCount;
		public uint TemplateInterfaceCount;
		public uint FunctorCount;
		public uint TemplateFunctorCount;
		public uint DelegateCount;
		public uint TemplateDelegateCount;
		public uint EnumCount;
		public uint PointerTypeCount;
		public uint ReferenceTypeCount;
		public uint FixedArrayCount;
		public uint DynamicArrayCount;
		public uint MethodCount;
		public uint TemplateMethodCount;
		public uint FieldCount;
		public uint ConstantCount;
		public uint PropertyCount;
		public uint IndexedPropertyCount;
		public uint EventCount;

		// public System.Functors.Action CpuFeatureSelector;
		// public System.Functors.Action InitializeFls, FinalizeFls;
		// public System.Functors.Action InitializeTls, FinalizeTls;

		// public static uint TlsSnapshotSize, TlsSnapshotAlignment;
		// public static void* TlsSnapshotStart;

		// public static int FlsSnapshotSize, FlsSnapshotAlignment;
		// public static void* FlsSnapshotStart;
	}
}