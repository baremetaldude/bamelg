//
// Created by Eugeny Grishul
//
// See license at http://bamelg.com/license.txt
//

using System.Collections;
using System.Diagnostics;
using System.Runtime;

namespace System.Reflection {
	[Alignment( Boundary = sizeof( intptr ) )]
	public partial struct ParameterInfo {
		public static bool operator ==( [In] thistype& left, [In] thistype& right ) { return &left == &right; }
		public static bool operator !=( [In] thistype& left, [In] thistype& right ) { return &left != &right; }

		public SbcsString Name;
		public Type& ParameterType;

		public Attribute** Attributes;
		public bool IsDefined( [In] UserType& type ) { return GetAttribute( type ) != null; }
		public Attribute* GetAttribute( [In] UserType& type ) { return Type.GetAttribute( Attributes, AttributeCount, type ); }
		public T* GetAttribute<T>() { return ( T* ) GetAttribute( typeof( T ) ); }

		public uint AttributeCount;
	}
}