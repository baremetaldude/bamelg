//
// Created by Eugeny Grishul
//
// See license at http://bamelg.com/license.txt
//

using System.IO;
using System.Serialization;

namespace System {
	public partial struct Version : IBinarySerializable, ITextSerializable, IFormattable {
		void IBinarySerializable.Serialize( BinaryWriter stream, SerializerContext context ) {
			stream.Write( Major );
			stream.Write( Minor );
			stream.Write( Build );
			stream.Write( Revision );
		}

		void IBinarySerializable.Deserialize( void* object, BinaryReader stream, SerializerContext context ) {
			stream.Read( Major );
			stream.Read( Minor );
			stream.Read( Build );
			stream.Read( Revision );
		}

		void ITextSerializable.Serialize( StringBuilder builder, string format, SerializerContext context ) {
			builder.Append( this );
		}

		void ITextSerializable.Deserialize( void* object, StringBuilder builder, SerializerContext context ) {
			TryParse<char>( builder.GetChars(), builder.Length, *( thistype* ) object );
		}

		void IFormattable.ToString( StringBuilder builder, string format ) {
			builder.Append( Major );

			builder.Append( '.' );
			builder.Append( Minor );

			if( Build != -1 ) {
				builder.Append( '.' );
				builder.Append( Build );
			}

			if( Revision != -1 ) {
				builder.Append( '.' );
				builder.Append( Revision );
			}
		}
	}
}