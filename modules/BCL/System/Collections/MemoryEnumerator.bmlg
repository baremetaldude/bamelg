//
// Created by Eugeny Grishul
//
// See license at http://bamelg.com/license.txt
//

namespace System.Collections {
	[Enumerator]
	public struct MemoryEnumerator<T> {
		private T* _start, _end, _current;

		public MemoryEnumerator( T* start, T* end ) {
			_start = start;
			_end = end;
			_current = null;
		}

		public MemoryEnumerator( T* start, uint count ) {
			_start = start;
			_end = start + count;
			_current = null;
		}

		public uint Count { get { return ( uint )( _end - _start ); } }

		public bool MoveNext() {
			if( _current == null ) { _current = _start; return _current < _end; }

			var newValue = _current + 1;
			if( newValue < _end ) {
				_current = newValue;
				return true;
			}

			_current = null;
			return false;
		}

		public T* Current { get { return _current; } }
	}
}