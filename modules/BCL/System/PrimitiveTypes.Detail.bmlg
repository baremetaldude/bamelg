//
// Created by Eugeny Grishul
//
// See license at http://bamelg.com/license.txt
//

using System.Globalization;
using System.IO;
using System.Serialization;
using System.Text;

namespace System {
	public partial struct Boolean : IBinarySerializable, ITextSerializable, IFormattable {
		void IBinarySerializable.Serialize( BinaryWriter stream, SerializerContext context ) { stream.Write( this ); }
		void IBinarySerializable.Deserialize( void* object, BinaryReader stream, SerializerContext context ) { *( thistype* ) object = stream.ReadBool(); }

		void ITextSerializable.Serialize( StringBuilder builder, string format, SerializerContext context ) { builder.Append( this ); }
		void ITextSerializable.Deserialize( void* object, StringBuilder builder, SerializerContext context ) { PrimitiveTypesParser.TryParseBool( builder.GetChars(), builder.Length, *( thistype* ) object ); }

		public void ToString( StringBuilder builder, string format ) { builder.Append( this ); }
	}

	public partial struct Int8 : IBinarySerializable, ITextSerializable, IFormattable {
		void IBinarySerializable.Serialize( BinaryWriter stream, SerializerContext context ) { stream.Write( this ); }
		void IBinarySerializable.Deserialize( void* object, BinaryReader stream, SerializerContext context ) { *( thistype* ) object = stream.ReadInt8(); }

		void ITextSerializable.Serialize( StringBuilder builder, string format, SerializerContext context ) { builder.Append( this, format ); }
		void ITextSerializable.Deserialize( void* object, StringBuilder builder, SerializerContext context ) { PrimitiveTypesParser.TryParseInt8( builder.GetChars(), builder.Length, *( thistype* ) object ); }

		public void ToString( StringBuilder builder, string format ) { builder.Append( this, format ); }
	}

	public partial struct UInt8 : IBinarySerializable, ITextSerializable, IFormattable {
		void IBinarySerializable.Serialize( BinaryWriter stream, SerializerContext context ) { stream.Write( this ); }
		void IBinarySerializable.Deserialize( void* object, BinaryReader stream, SerializerContext context ) { *( thistype* ) object = stream.ReadUInt8(); }

		void ITextSerializable.Serialize( StringBuilder builder, string format, SerializerContext context ) { builder.Append( this, format ); }
		void ITextSerializable.Deserialize( void* object, StringBuilder builder, SerializerContext context ) { PrimitiveTypesParser.TryParseUInt8( builder.GetChars(), builder.Length, *( thistype* ) object ); }

		public void ToString( StringBuilder builder, string format ) { builder.Append( this, format ); }
	}

	/// short/ushort
	public partial struct LittleEndianInt16 : IBinarySerializable, ITextSerializable, IFormattable {
		void IBinarySerializable.Serialize( BinaryWriter stream, SerializerContext context ) { stream.Write( this ); }
		void IBinarySerializable.Deserialize( void* object, BinaryReader stream, SerializerContext context ) { *( thistype* ) object = stream.ReadInt16(); }

		void ITextSerializable.Serialize( StringBuilder builder, string format, SerializerContext context ) { builder.Append( this, format ); }
		void ITextSerializable.Deserialize( void* object, StringBuilder builder, SerializerContext context ) { short result; PrimitiveTypesParser.TryParseInt16( builder.GetChars(), builder.Length, result ); *( thistype* ) object = result; }

		public void ToString( StringBuilder builder, string format ) { builder.Append( ( short ) this, format ); }
	}

	public partial struct LittleEndianUInt16 : IBinarySerializable, ITextSerializable, IFormattable {
		void IBinarySerializable.Serialize( BinaryWriter stream, SerializerContext context ) { stream.Write( this ); }
		void IBinarySerializable.Deserialize( void* object, BinaryReader stream, SerializerContext context ) { *( thistype* ) object = stream.ReadUInt16(); }

		void ITextSerializable.Serialize( StringBuilder builder, string format, SerializerContext context ) { builder.Append( this, format ); }
		void ITextSerializable.Deserialize( void* object, StringBuilder builder, SerializerContext context ) { ushort result; PrimitiveTypesParser.TryParseUInt16( builder.GetChars(), builder.Length, result ); *( thistype* ) object = result; }

		public void ToString( StringBuilder builder, string format ) { builder.Append( ( ushort ) this, format ); }
	}

	public partial struct BigEndianInt16 : IBinarySerializable, ITextSerializable, IFormattable {
		void IBinarySerializable.Serialize( BinaryWriter stream, SerializerContext context ) { stream.Write( this ); }
		void IBinarySerializable.Deserialize( void* object, BinaryReader stream, SerializerContext context ) { *( thistype* ) object = stream.ReadInt16(); }

		void ITextSerializable.Serialize( StringBuilder builder, string format, SerializerContext context ) { builder.Append( this, format ); }
		void ITextSerializable.Deserialize( void* object, StringBuilder builder, SerializerContext context ) { short result; PrimitiveTypesParser.TryParseInt16( builder.GetChars(), builder.Length, result ); *( thistype* ) object = result; }

		public void ToString( StringBuilder builder, string format ) { builder.Append( ( short ) this, format ); }
	}

	public partial struct BigEndianUInt16 : IBinarySerializable, ITextSerializable, IFormattable {
		void IBinarySerializable.Serialize( BinaryWriter stream, SerializerContext context ) { stream.Write( this ); }
		void IBinarySerializable.Deserialize( void* object, BinaryReader stream, SerializerContext context ) { *( thistype* ) object = stream.ReadUInt16(); }

		void ITextSerializable.Serialize( StringBuilder builder, string format, SerializerContext context ) { builder.Append( this, format ); }
		void ITextSerializable.Deserialize( void* object, StringBuilder builder, SerializerContext context ) { ushort result; PrimitiveTypesParser.TryParseUInt16( builder.GetChars(), builder.Length, result ); *( thistype* ) object = result; }

		public void ToString( StringBuilder builder, string format ) { builder.Append( ( ushort ) this, format ); }
	}

	/// int/uint
	public partial struct LittleEndianInt32 : IBinarySerializable, ITextSerializable, IFormattable {
		void IBinarySerializable.Serialize( BinaryWriter stream, SerializerContext context ) { stream.Write( this ); }
		void IBinarySerializable.Deserialize( void* object, BinaryReader stream, SerializerContext context ) { *( thistype* ) object = stream.ReadInt32(); }

		void ITextSerializable.Serialize( StringBuilder builder, string format, SerializerContext context ) { builder.Append( this, format ); }
		void ITextSerializable.Deserialize( void* object, StringBuilder builder, SerializerContext context ) { int result; PrimitiveTypesParser.TryParseInt32( builder.GetChars(), builder.Length, result ); *( thistype* ) object = result; }

		public void ToString( StringBuilder builder, string format ) { builder.Append( ( int ) this, format ); }
	}

	public partial struct LittleEndianUInt32 : IBinarySerializable, ITextSerializable, IFormattable {
		void IBinarySerializable.Serialize( BinaryWriter stream, SerializerContext context ) { stream.Write( this ); }
		void IBinarySerializable.Deserialize( void* object, BinaryReader stream, SerializerContext context ) { *( thistype* ) object = stream.ReadUInt32(); }

		void ITextSerializable.Serialize( StringBuilder builder, string format, SerializerContext context ) { builder.Append( this, format ); }
		void ITextSerializable.Deserialize( void* object, StringBuilder builder, SerializerContext context ) { uint result; PrimitiveTypesParser.TryParseUInt32( builder.GetChars(), builder.Length, result ); *( thistype* ) object = result; }

		public void ToString( StringBuilder builder, string format ) { builder.Append( ( uint ) this, format ); }
	}

	public partial struct BigEndianInt32 : IBinarySerializable, ITextSerializable, IFormattable {
		void IBinarySerializable.Serialize( BinaryWriter stream, SerializerContext context ) { stream.Write( this ); }
		void IBinarySerializable.Deserialize( void* object, BinaryReader stream, SerializerContext context ) { *( thistype* ) object = stream.ReadInt32(); }

		void ITextSerializable.Serialize( StringBuilder builder, string format, SerializerContext context ) { builder.Append( this, format ); }
		void ITextSerializable.Deserialize( void* object, StringBuilder builder, SerializerContext context ) { int result; PrimitiveTypesParser.TryParseInt32( builder.GetChars(), builder.Length, result ); *( thistype* ) object = result; }

		public void ToString( StringBuilder builder, string format ) { builder.Append( ( int ) this, format ); }
	}

	public partial struct BigEndianUInt32 : IBinarySerializable, ITextSerializable, IFormattable {
		void IBinarySerializable.Serialize( BinaryWriter stream, SerializerContext context ) { stream.Write( this ); }
		void IBinarySerializable.Deserialize( void* object, BinaryReader stream, SerializerContext context ) { *( thistype* ) object = stream.ReadUInt32(); }

		void ITextSerializable.Serialize( StringBuilder builder, string format, SerializerContext context ) { builder.Append( this, format ); }
		void ITextSerializable.Deserialize( void* object, StringBuilder builder, SerializerContext context ) { uint result; PrimitiveTypesParser.TryParseUInt32( builder.GetChars(), builder.Length, result ); *( thistype* ) object = result; }

		public void ToString( StringBuilder builder, string format ) { builder.Append( ( uint ) this, format ); }
	}

	/// long/ulong
	public partial struct LittleEndianInt64 : IBinarySerializable, ITextSerializable, IFormattable {
		void IBinarySerializable.Serialize( BinaryWriter stream, SerializerContext context ) { stream.Write( this ); }
		void IBinarySerializable.Deserialize( void* object, BinaryReader stream, SerializerContext context ) { *( thistype* ) object = stream.ReadInt64(); }

		void ITextSerializable.Serialize( StringBuilder builder, string format, SerializerContext context ) { builder.Append( this, format ); }
		void ITextSerializable.Deserialize( void* object, StringBuilder builder, SerializerContext context ) { long result; PrimitiveTypesParser.TryParseInt64( builder.GetChars(), builder.Length, result ); *( thistype* ) object = result; }

		public void ToString( StringBuilder builder, string format ) { builder.Append( ( long ) this, format ); }
	}

	public partial struct LittleEndianUInt64 : IBinarySerializable, ITextSerializable, IFormattable {
		void IBinarySerializable.Serialize( BinaryWriter stream, SerializerContext context ) { stream.Write( this ); }
		void IBinarySerializable.Deserialize( void* object, BinaryReader stream, SerializerContext context ) { *( thistype* ) object = stream.ReadUInt64(); }

		void ITextSerializable.Serialize( StringBuilder builder, string format, SerializerContext context ) { builder.Append( this, format ); }
		void ITextSerializable.Deserialize( void* object, StringBuilder builder, SerializerContext context ) { ulong result; PrimitiveTypesParser.TryParseUInt64( builder.GetChars(), builder.Length, result ); *( thistype* ) object = result; }

		public void ToString( StringBuilder builder, string format ) { builder.Append( ( ulong ) this, format ); }
	}

	public partial struct BigEndianInt64 : IBinarySerializable, ITextSerializable, IFormattable {
		void IBinarySerializable.Serialize( BinaryWriter stream, SerializerContext context ) { stream.Write( this ); }
		void IBinarySerializable.Deserialize( void* object, BinaryReader stream, SerializerContext context ) { *( thistype* ) object = stream.ReadInt64(); }

		void ITextSerializable.Serialize( StringBuilder builder, string format, SerializerContext context ) { builder.Append( this, format ); }
		void ITextSerializable.Deserialize( void* object, StringBuilder builder, SerializerContext context ) { long result; PrimitiveTypesParser.TryParseInt64( builder.GetChars(), builder.Length, result ); *( thistype* ) object = result; }

		public void ToString( StringBuilder builder, string format ) { builder.Append( ( long ) this, format ); }
	}

	public partial struct BigEndianUInt64 : IBinarySerializable, ITextSerializable, IFormattable {
		void IBinarySerializable.Serialize( BinaryWriter stream, SerializerContext context ) { stream.Write( this ); }
		void IBinarySerializable.Deserialize( void* object, BinaryReader stream, SerializerContext context ) { *( thistype* ) object = stream.ReadUInt64(); }

		void ITextSerializable.Serialize( StringBuilder builder, string format, SerializerContext context ) { builder.Append( this, format ); }
		void ITextSerializable.Deserialize( void* object, StringBuilder builder, SerializerContext context ) { ulong result; PrimitiveTypesParser.TryParseUInt64( builder.GetChars(), builder.Length, result ); *( thistype* ) object = result; }

		public void ToString( StringBuilder builder, string format ) { builder.Append( ( ulong ) this, format ); }
	}

	public partial struct LittleEndianSingleIEEE754 : IBinarySerializable, ITextSerializable, IFormattable {
		void IBinarySerializable.Serialize( BinaryWriter stream, SerializerContext context ) { stream.Write( this ); }
		void IBinarySerializable.Deserialize( void* object, BinaryReader stream, SerializerContext context ) { *( thistype* ) object = stream.ReadFloat(); }

		void ITextSerializable.Serialize( StringBuilder builder, string format, SerializerContext context ) { builder.Append( this, format ); }
		void ITextSerializable.Deserialize( void* object, StringBuilder builder, SerializerContext context ) { float result; PrimitiveTypesParser.TryParseSingleIEEE754( builder.GetChars(), builder.Length, result ); *( thistype* ) object = result; }

		public void ToString( StringBuilder builder, string format ) { builder.Append( this, format ); }
	}

	public partial struct BigEndianSingleIEEE754 : IBinarySerializable, ITextSerializable, IFormattable {
		void IBinarySerializable.Serialize( BinaryWriter stream, SerializerContext context ) { stream.Write( this ); }
		void IBinarySerializable.Deserialize( void* object, BinaryReader stream, SerializerContext context ) { *( thistype* ) object = stream.ReadFloat(); }

		void ITextSerializable.Serialize( StringBuilder builder, string format, SerializerContext context ) { builder.Append( this, format ); }
		void ITextSerializable.Deserialize( void* object, StringBuilder builder, SerializerContext context ) { float result; PrimitiveTypesParser.TryParseSingleIEEE754( builder.GetChars(), builder.Length, result ); *( thistype* ) object = result; }

		public void ToString( StringBuilder builder, string format ) { builder.Append( this, format ); }
	}

	public partial struct LittleEndianDoubleIEEE754 : IBinarySerializable, ITextSerializable, IFormattable {
		void IBinarySerializable.Serialize( BinaryWriter stream, SerializerContext context ) { stream.Write( this ); }
		void IBinarySerializable.Deserialize( void* object, BinaryReader stream, SerializerContext context ) { *( thistype* ) object = stream.ReadDouble(); }

		void ITextSerializable.Serialize( StringBuilder builder, string format, SerializerContext context ) { builder.Append( this, format ); }
		void ITextSerializable.Deserialize( void* object, StringBuilder builder, SerializerContext context ) { double result; PrimitiveTypesParser.TryParseDoubleIEEE754( builder.GetChars(), builder.Length, result ); *( thistype* ) object = result; }

		public void ToString( StringBuilder builder, string format ) { builder.Append( this, format ); }
	}

	public partial struct BigEndianDoubleIEEE754 : IBinarySerializable, ITextSerializable, IFormattable {
		void IBinarySerializable.Serialize( BinaryWriter stream, SerializerContext context ) { stream.Write( this ); }
		void IBinarySerializable.Deserialize( void* object, BinaryReader stream, SerializerContext context ) { *( thistype* ) object = stream.ReadDouble(); }

		void ITextSerializable.Serialize( StringBuilder builder, string format, SerializerContext context ) { builder.Append( this, format ); }
		void ITextSerializable.Deserialize( void* object, StringBuilder builder, SerializerContext context ) { double result; PrimitiveTypesParser.TryParseDoubleIEEE754( builder.GetChars(), builder.Length, result ); *( thistype* ) object = result; }

		public void ToString( StringBuilder builder, string format ) { builder.Append( this, format ); }
	}

	[PrimitiveType( Size = sizeof( ushort ) )]
	public sealed partial struct Boolean16 : IFormattable {
		public static implicit operator thistype( bool value ) { return bitcast<thistype>( ( ushort ) value ); }
		public static implicit operator bool( thistype value ) { return ( bool ) bitcast<ushort>( value ); }

		public bool operator !() { return bitcast<ushort>( this ) == 0; }

		public void ToString( StringBuilder builder, string format ) { builder.Append( ( bool ) this ); }
	}

	[PrimitiveType( Size = sizeof( uint ) )]
	public sealed partial struct Boolean32 : IFormattable {
		public static implicit operator thistype( bool value ) { return bitcast<thistype>( ( uint ) value ); }
		public static implicit operator bool( thistype value ) { return ( bool ) bitcast<uint>( value ); }

		public bool operator !() { return bitcast<uint>( this ) == 0; }

		public void ToString( StringBuilder builder, string format ) { builder.Append( ( bool ) this ); }
	}

	[PrimitiveType( Size = sizeof( ulong ) )]
	public sealed partial struct Boolean64 : IFormattable {
		public static implicit operator thistype( bool value ) { return bitcast<thistype>( ( ulong ) value ); }
		public static implicit operator bool( thistype value ) { return ( bool ) bitcast<ulong>( value ); }

		public bool operator !() { return bitcast<ulong>( this ) == 0; }

		public void ToString( StringBuilder builder, string format ) { builder.Append( ( bool ) this ); }
	}

	public sealed partial struct LittleEndianIEEE754_80 : IFormattable {
		public byte[10] Data;

		public void ToString( StringBuilder builder, string format ) { Assert.NotImplemented(); }
	}

	public sealed partial struct TypedReference {
		public T QueryInterface<T>() { return Type.QueryInterface<T>( Address ); }
	}
}