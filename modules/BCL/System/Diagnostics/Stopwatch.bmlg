//
// Created by Eugeny Grishul
//
// See license at http://bamelg.com/license.txt
//

namespace System.Diagnostics {
	public partial struct Stopwatch : IFormattable {
		private DateTime _started;
		private TimeSpan _accumulated;

		public Stopwatch( bool start ) {
			Reset();

			if( start ) Start();
		}

		public Stopwatch()
			: this( true ) {
		}

		public void Reset() {
			_started = new DateTime( 0 );
			_accumulated = new TimeSpan( 0 );
		}

		public void Restart() {
			Reset();
			Start();
		}

		public void Start() {
			_started = _implNow();
		}

		public void Stop() {
			if( _started.Ticks == 0 ) return;

			_accumulated += _implNow() - _started;

			_started = DateTime.MinValue;
		}

		public TimeSpan Elapsed {
			get {
				if( _started.Ticks == 0 ) return _accumulated;

				return _implNow() - _started + _accumulated;
			}
		}

		public void ToString( StringBuilder builder, string format ) {
			builder.Append( "Elapsed: " );
			builder.Append( Elapsed );
		}
	}
}