//
// Created by Eugeny Grishul
//
// See license at http://bamelg.com/license.txt
//

using System.Diagnostics;
using System.IO;
using System.Runtime;
using System.Text;

namespace System.IO {
	public interface ITextWriter {
		void Flush( FlushKind flushKind = FlushKind.DeepWrite );

		void WriteLine();

		void Write( bool value );
		void WriteLine( bool value );

		void Write( char value );
		void WriteLine( char value );

		void Write( sbyte value );
		void WriteLine( sbyte value );

		void Write( byte value );
		void WriteLine( byte value );

		void Write( short value );
		void WriteLine( short value );

		void Write( ushort value );
		void WriteLine( ushort value );

		void Write( int value );
		void WriteLine( int value );

		void Write( uint value );
		void WriteLine( uint value );

		void Write( long value );
		void WriteLine( long value );

		void Write( ulong value );
		void WriteLine( ulong value );

		void Write( float value );
		void WriteLine( float value );

		void Write( double value );
		void WriteLine( double value );

		void Write( TypedReference value );
		void WriteLine( TypedReference value );

		void Write( SbcsString value );
		void WriteLine( SbcsString value );

		void Write( CString value );
		void WriteLine( CString value );

		void Write( CStringSpan value );
		void WriteLine( CStringSpan value );

		void Write( Utf8String value );
		void WriteLine( Utf8String value );

		void Write( CUtf8String value );
		void WriteLine( CUtf8String value );

		void Write( CUtf8StringSpan value );
		void WriteLine( CUtf8StringSpan value );

		void Write( Utf16String value );
		void WriteLine( Utf16String value );

		void Write( CUtf16String value );
		void WriteLine( CUtf16String value );

		void Write( CUtf16StringSpan value );
		void WriteLine( CUtf16StringSpan value );

		void Write( Utf32String value );
		void WriteLine( Utf32String value );

		void Write( CUtf32String value );
		void WriteLine( CUtf32String value );

		void Write( CUtf32StringSpan value );
		void WriteLine( CUtf32StringSpan value );

		void Write( StringBuilder value );
		void WriteLine( StringBuilder value );

		void Write( [VerifyFormatString] string str, vararg TypedReference parameters );
		void WriteLine( [VerifyFormatString] string str, vararg TypedReference parameters );
	}
}