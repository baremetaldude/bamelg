//
// Created by Eugeny Grishul
//
// See license at http://bamelg.com/license.txt
//

using System.Diagnostics;
using System.Runtime;

namespace System.IO {
	public sealed struct NullStream : IStream {
		public static NullStream Instance;

		public StreamingBufferInfo* BufferInfo { get { return null; } }
		public StreamCapabilities Capabilities { get { return StreamCapabilities.Read; } }

		int IStream.Read( void* buffer, int length ) { return 0; }
		void IStream.Write( void* buffer, int length ) { }

		int IStream.Read( vararg MemorySegment segments ) { return 0; }
		void IStream.Write( vararg MemorySegment segments ) { }

		void IStream.Flush( FlushKind flushKind = FlushKind.DeepWrite ) { }
		void IDisposable.Dispose() { }

		TimeSpan IStream.ReadTimeout { get { return TimeSpan.Zero; } set { } }
		TimeSpan IStream.WriteTimeout { get { return TimeSpan.Zero; } set { } }

		long IStream.Position { get { return 0; } }
		long IStream.Seek( long offset, SeekOrigin origin ) { return 0; }
		
		MemoryMappedView IStream.CreateReadView( intptr offset, intptr length ) { return null; }
		MemoryMappedView IStream.CreateWriteView( intptr offset, intptr length ) { return null; }
	}
}