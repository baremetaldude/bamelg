//
// Created by Eugeny Grishul
//
// See license at http://bamelg.com/license.txt
//

using System.Diagnostics;
using System.IO;
using System.Runtime;
using System.Text;

namespace System.IO {
	public class StringWriter : ITextWriter {
		public StringBuilder Buffer;

		public StringWriter() {
			Buffer = new StringBuilder();
		}

		public StringWriter( StringBuilder buffer ) {
			Buffer = buffer;
		}

		public void Flush( FlushKind flushKind = FlushKind.DeepWrite ) {
		}

		public void WriteLine() { Buffer.AppendLine(); }

		public void Write( bool value ) { Buffer.Append( value ); }
		public void WriteLine( bool value ) { Write( value ); WriteLine(); }

		public void Write( char value ) { Buffer.Append( value ); }
		public void WriteLine( char value ) { Write( value ); WriteLine(); }

		public void Write( sbyte value ) { Buffer.Append( value ); }
		public void WriteLine( sbyte value ) { Write( value ); WriteLine(); }

		public void Write( byte value ) { Buffer.Append( value ); }
		public void WriteLine( byte value ) { Write( value ); WriteLine(); }

		public void Write( short value ) { Buffer.Append( value ); }
		public void WriteLine( short value ) { Write( value ); WriteLine(); }

		public void Write( ushort value ) { Buffer.Append( value ); }
		public void WriteLine( ushort value ) { Write( value ); WriteLine(); }

		public void Write( int value ) { Buffer.Append( value ); }
		public void WriteLine( int value ) { Write( value ); WriteLine(); }

		public void Write( uint value ) { Buffer.Append( value ); }
		public void WriteLine( uint value ) { Write( value ); WriteLine(); }

		public void Write( long value ) { Buffer.Append( value ); }
		public void WriteLine( long value ) { Write( value ); WriteLine(); }

		public void Write( ulong value ) { Buffer.Append( value ); }
		public void WriteLine( ulong value ) { Write( value ); WriteLine(); }

		public void Write( float value ) { Buffer.Append( value ); }
		public void WriteLine( float value ) { Write( value ); WriteLine(); }

		public void Write( double value ) { Buffer.Append( value ); }
		public void WriteLine( double value ) { Write( value ); WriteLine(); }

		public void Write( TypedReference value ) { Buffer.Append( value ); }
		public void WriteLine( TypedReference value ) { Write( value ); WriteLine(); }

		public void Write( SbcsString value ) { Buffer.Append( value ); }
		public void WriteLine( SbcsString value ) { Write( value ); WriteLine(); }

		public void Write( CString value ) { Buffer.Append( value ); }
		public void WriteLine( CString value ) { Buffer.Append( value ); Buffer.AppendLine(); }

		public void Write( CStringSpan value ) { Buffer.Append( value ); }
		public void WriteLine( CStringSpan value ) { Buffer.Append( value ); Buffer.AppendLine(); }

		public void Write( Utf8String value ) { Buffer.Append( value ); }
		public void WriteLine( Utf8String value ) { Write( value ); WriteLine(); }

		public void Write( CUtf8String value ) { Buffer.Append( value ); }
		public void WriteLine( CUtf8String value ) { Buffer.Append( value ); Buffer.AppendLine(); }

		public void Write( CUtf8StringSpan value ) { Buffer.Append( value ); }
		public void WriteLine( CUtf8StringSpan value ) { Buffer.Append( value ); Buffer.AppendLine(); }

		public void Write( Utf16String value ) { Buffer.Append( value ); }
		public void WriteLine( Utf16String value ) { Write( value ); WriteLine(); }

		public void Write( CUtf16String value ) { Buffer.Append( value ); }
		public void WriteLine( CUtf16String value ) { Buffer.Append( value ); Buffer.AppendLine(); }

		public void Write( CUtf16StringSpan value ) { Buffer.Append( value ); }
		public void WriteLine( CUtf16StringSpan value ) { Buffer.Append( value ); Buffer.AppendLine(); }

		public void Write( Utf32String value ) { Buffer.Append( value ); }
		public void WriteLine( Utf32String value ) { Write( value ); WriteLine(); }

		public void Write( CUtf32String value ) { Buffer.Append( value ); }
		public void WriteLine( CUtf32String value ) { Buffer.Append( value ); Buffer.AppendLine(); }

		public void Write( CUtf32StringSpan value ) { Buffer.Append( value ); }
		public void WriteLine( CUtf32StringSpan value ) { Buffer.Append( value ); Buffer.AppendLine(); }

		public void Write( StringBuilder value ) { Buffer.Append( value ); }
		public void WriteLine( StringBuilder value ) { Write( value ); WriteLine(); }

		public void Write( [VerifyFormatString] string str, vararg TypedReference parameters ) { Buffer.AppendFormat( str, vararg( parameters, parameters.Length ) ); }
		public void WriteLine( [VerifyFormatString] string str, vararg TypedReference parameters ) { Buffer.AppendFormat( str, vararg( parameters, parameters.Length ) ); Buffer.AppendLine(); }
	}
}