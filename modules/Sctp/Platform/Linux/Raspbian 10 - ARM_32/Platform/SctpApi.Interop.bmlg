//
// Created by Eugeny Grishul
//
// See license at http://bamelg.com/license.txt
//

using System;
using System.Runtime.InteropServices;

using Platform.Kernel;
using Platform.Libc;

namespace Platform.Sctp {
	[ExternLibrary( Image = "/usr/lib/arm-linux-gnueabihf/libsctp.so.1" )]
	public static partial struct SctpApi {
		public extern static int sctp_bindx( int sd, sockaddr* addrs, int addrcnt, int flags );
		public extern static int sctp_connectx( int sd, sockaddr* addrs, int addrcnt, int* id );
		public extern static int sctp_freeladdrs( sockaddr* addrs );
		public extern static int sctp_freepaddrs( sockaddr* addrs );
		public extern static int sctp_getaddrlen( ushort family );
		public extern static int sctp_getladdrs( int sd, int id, sockaddr** addrs );
		public extern static int sctp_getpaddrs( int sd, int id, sockaddr** addrs );
		public extern static int sctp_opt_info( int sd, int id, int opt, void* arg, uint* size );
		public extern static int sctp_peeloff( int sd, int assocId );
		public extern static int sctp_recvmsg( int s, void* msg, uint len, sockaddr* from, uint* fromlen, sctp_sndrcvinfo* sinfo, int* msgFlags );
		public extern static int sctp_send( int s, void* msg, uint len, sctp_sndrcvinfo* sinfo, int flags );
		public extern static int sctp_sendmsg( int s, void* msg, uint len, sockaddr* to, uint tolen, uint ppid, uint flags, ushort streamNo, uint timetolive, uint context );
	}
	[ExplicitSize( Size = 20 )]
	[Alignment( Boundary = 4 )]
	public partial struct sctp_sendv_spa {
		[ExplicitOffset( Offset = 0 )]
		public uint sendv_flags;
		[ExplicitOffset( Offset = 4 )]
		public sctp_sndinfo sendv_sndinfo;
	}
}