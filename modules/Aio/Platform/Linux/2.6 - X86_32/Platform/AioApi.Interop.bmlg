//
// Created by Eugeny Grishul
//
// See license at http://bamelg.com/license.txt
//

using System;
using System.Runtime.InteropServices;

using Platform.Libc;

namespace Platform.Aio {
	[ExternLibrary( Image = "/usr/lib/libaio.so" )]
	public static partial struct AioApi {
		public extern static int io_cancel( io_context* ctx, iocb* iocb, io_event* evt );
		public extern static int io_destroy( io_context* ctx );
		public extern static int io_getevents( io_context* ctxId, intptr minNr, intptr nr, io_event* events, timespec* timeout );
		public extern static int io_queue_init( int maxevents, io_context** ctxp );
		public extern static int io_queue_release( io_context* ctx );
		public extern static int io_queue_run( io_context* ctx );
		public extern static int io_setup( int maxevents, io_context** ctxp );
		public extern static int io_submit( io_context* ctx, intptr nr, iocb** ios );
	}
	public enum io_iocb_cmd : uint {
		IO_CMD_PREAD =   0,
		IO_CMD_PWRITE =  1,
		IO_CMD_FSYNC =   2,
		IO_CMD_FDSYNC =  3,
		IO_CMD_POLL =    5,
		IO_CMD_NOOP =    6,
		IO_CMD_PREADV =  7,
		IO_CMD_PWRITEV = 8,
	}
	public partial struct io_context {
	}
	[ExplicitSize( Size = 32 )]
	[Alignment( Boundary = 4 )]
	public partial struct io_event {
		[ExplicitOffset( Offset = 0 )]
		public void* data;
		[ExplicitOffset( Offset = 4 )]
		public uint __pad1;
		[ExplicitOffset( Offset = 8 )]
		public iocb* obj;
		[ExplicitOffset( Offset = 12 )]
		public uint __pad2;
		[ExplicitOffset( Offset = 16 )]
		public uintptr res;
		[ExplicitOffset( Offset = 20 )]
		public uint __pad3;
		[ExplicitOffset( Offset = 24 )]
		public uintptr res2;
		[ExplicitOffset( Offset = 28 )]
		public uint __pad4;
	}
	[ExplicitSize( Size = 40 )]
	[Alignment( Boundary = 4 )]
	public partial struct io_iocb_common {
		[ExplicitOffset( Offset = 0 )]
		public void* buf;
		[ExplicitOffset( Offset = 4 )]
		public uint __pad1;
		[ExplicitOffset( Offset = 8 )]
		public uintptr nbytes;
		[ExplicitOffset( Offset = 12 )]
		public uint __pad2;
		[ExplicitOffset( Offset = 16 )]
		public long offset;
		[ExplicitOffset( Offset = 24 )]
		public long __pad3;
		[ExplicitOffset( Offset = 32 )]
		public uint flags;
		[ExplicitOffset( Offset = 36 )]
		public uint resfd;
	}
	[ExplicitSize( Size = 8 )]
	[Alignment( Boundary = 4 )]
	public partial struct io_iocb_poll {
		[ExplicitOffset( Offset = 0 )]
		public int events;
		[ExplicitOffset( Offset = 4 )]
		public uint __pad1;
	}
	[ExplicitSize( Size = 8 )]
	[Alignment( Boundary = 4 )]
	public partial struct io_iocb_sockaddr {
		[ExplicitOffset( Offset = 0 )]
		public sockaddr* addr;
		[ExplicitOffset( Offset = 4 )]
		public int len;
	}
	[ExplicitSize( Size = 16 )]
	[Alignment( Boundary = 4 )]
	public partial struct io_iocb_vector {
		[ExplicitOffset( Offset = 0 )]
		public iovec* vec;
		[ExplicitOffset( Offset = 4 )]
		public int nr;
		[ExplicitOffset( Offset = 8 )]
		public long offset;
	}
	[ExplicitSize( Size = 64 )]
	[Alignment( Boundary = 4 )]
	public partial struct iocb {
		[ExplicitOffset( Offset = 0 )]
		public void* data;
		[ExplicitOffset( Offset = 4 )]
		public uint __pad1;
		[ExplicitOffset( Offset = 8 )]
		public uint key;
		[ExplicitOffset( Offset = 12 )]
		public uint __pad2;
		[ExplicitOffset( Offset = 16 )]
		public short aio_lio_opcode;
		[ExplicitOffset( Offset = 18 )]
		public short aio_reqprio;
		[ExplicitOffset( Offset = 20 )]
		public int aio_fildes;
		[ExplicitOffset( Offset = 24 )]
		public UnnamedUnion_DFC7713A u;
	}
	[ExplicitSize( Size = 40 )]
	[Alignment( Boundary = 4 )]
	public partial struct UnnamedUnion_DFC7713A {
		public io_iocb_common& c { get { return *cast<io_iocb_common*>( &this ); } }
		public io_iocb_vector& v { get { return *cast<io_iocb_vector*>( &this ); } }
		public io_iocb_poll& poll { get { return *cast<io_iocb_poll*>( &this ); } }
		public io_iocb_sockaddr& saddr { get { return *cast<io_iocb_sockaddr*>( &this ); } }
	}
}