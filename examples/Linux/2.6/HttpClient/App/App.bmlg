//
// Created by $USER
//

using System;
using System.IO;
using System.Net;

using Platform.IO;
using Platform.Kernel;
using Platform.Libc;

namespace Example {
	// http://192.168.2.154:8080/
	public partial class App {
		[EntryPoint]
		private static void Main() {
			utsname value;
			LibcApi.uname( value );

			Console.WriteLine( "PID={0}", LibcApi.getpid() );
			Console.WriteLine( "sysname == '{0}', nodename == '{1}', release == '{2}', version == '{3}', machine == '{4}', domainname == '{5}'", new CString( &value.sysname[0] ), new CString( &value.nodename[0] ), new CString( &value.release[0] ), new CString( &value.version[0] ), new CString( &value.machine[0] ), new CString( &value.domainname[0] ) );

			Console.WriteLine( "@{ Environment variables:" );
			for( var i = 0; LibcApi.environ[i] != null; ++i ) Console.WriteLine( "\t{0}", LibcApi.environ[i] );
			Console.WriteLine( "@}" );
			Console.WriteLine();

			var eventLoop = new EventLoop(){ Tracing = true };
			eventLoop.CatchExitSignals(); // convert signals to events

			for( var i = 0; i < RepeatCount / 2; ++i )
				Fiber.Start( 8, LoadPage );

			FetchStart = DateTime.UnbiasedNow;

			eventLoop.Dispatch();
		}

		private static int RepeatCount = 6;
		private static DateTime FetchStart;

		private static void LoadPage() {
			// if( --RepeatCount < 0 ) return; // atomics not necessary since LoadPage() and Main() exectuted in same thread

			var socket = new SocketHandleTCP();
			if( socket.Connect( IPv4Endpoint.Parse( "198.252.206.16:80" ) ) != SystemError.None )
				return;

			socket.ImmediateDelivery = true;

			var client = new HttpClient( new NetworkStream( socket ) );
			var str = client.DownloadStream( "stackoverflow.com", "/questions/13631462" );
			// var str = client.DownloadStream( "stackoverflow.com", "/questions/13631462/how-to-run-the-javascript-script-on-all-the-pages-of-domain" );
			// var str = client.DownloadStream( "yo.com", "/" );

			using( var fs = System.IO.File.OpenWrite( Utf8String.Format( "/tmp/{0:X16}.{1}.htm", DateTime.UnbiasedNow.Ticks, Fiber.Current ) ) ) {
				// Trace.Write( new ConsoleAttributes() {
				// 	ForegroundColor = ConsoleAttributes.Color.Cyan,
				// 	Bold = true
				// }, "Fiber: Start read {0}", DateTime.UnbiasedNow );

				// str.ReadToEnd();
				fs.Write( str );

				// Trace.Write( new ConsoleAttributes() {
				// 	ForegroundColor = ConsoleAttributes.Color.Cyan,
				// 	Bold = true
				// }, "Fiber: End read {0}", DateTime.UnbiasedNow );
			}

			// if( RepeatCount >= 1 ) Fiber.Start( 8, LoadPage );

			if( RepeatCount <= 0 )
				Fiber.FiberManager.CurrentEventLoop.RequestExit();
		}
	}
}