//
// Created by $USER
//

using System;
using System.IO;

namespace Example {
	public partial class App {
		[EntryPoint]
		private static void Main() {
			using( var fileStream = System.IO.File.OpenWrite( "/tmp/RoundingModes.txt" ) )
			using( var writer = new StreamWriter( fileStream ) ) {
				writer.WriteLine( "Value HalfToPosInf HalfToNegInf HalfToEven HalfAwayFromZero HalfTowardsZero Floor Ceiling Truncate Cover" );

				for( var i = -30; i <= 30; ++i ) {
					var value = i * 0.1;

					if( i == 0 ) value = -0.0;

					writer.WriteLine( "{0," + "Value".Length + ":@F1} {1," + "HalfToPosInf".Length + "} {2," + "HalfToNegInf".Length + "} {3," + "HalfToEven".Length + "} {4," + "HalfAwayFromZero".Length + "} {5," + "HalfTowardsZero".Length + "} {6," + "Floor".Length + "} {7," + "Ceiling".Length + "} {8," + "Truncate".Length + "} {9," + "Cover".Length + "}", value, Math.RoundTowardsPositiveInfinityToInt64( value ), Math.RoundTowardsNegativeInfinityToInt64( value ), Math.RoundToEvenInt64( value ), Math.RoundAwayFromZeroToInt64( value ), Math.RoundTowardsZeroToInt64( value ), Math.FloorToInt64( value ), Math.CeilingToInt64( value ), Math.TruncateToInt64( value ), Math.CoverToInt64( value ) );

					if( i == 0 ) {
						value = 0.0;
						writer.WriteLine( "{0," + "Value".Length + ":@F1} {1," + "HalfToPosInf".Length + "} {2," + "HalfToNegInf".Length + "} {3," + "HalfToEven".Length + "} {4," + "HalfAwayFromZero".Length + "} {5," + "HalfTowardsZero".Length + "} {6," + "Floor".Length + "} {7," + "Ceiling".Length + "} {8," + "Truncate".Length + "} {9," + "Cover".Length + "}", value, Math.RoundTowardsPositiveInfinityToInt64( value ), Math.RoundTowardsNegativeInfinityToInt64( value ), Math.RoundToEvenInt64( value ), Math.RoundAwayFromZeroToInt64( value ), Math.RoundTowardsZeroToInt64( value ), Math.FloorToInt64( value ), Math.CeilingToInt64( value ), Math.TruncateToInt64( value ), Math.CoverToInt64( value ) );
					}
				}
			}
		}
	}
}