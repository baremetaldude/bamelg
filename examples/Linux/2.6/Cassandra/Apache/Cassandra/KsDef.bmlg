//
// Autogenerated by Thrift Compiler ( 0.9.0-dev ). Do not edit
//

using System;
using System.Collections;
using System.Serialization.Thrift;

namespace Apache.Cassandra {
	public partial class KsDef : IFormattable {
		private Utf8String _name;
		private Utf8String _strategy_class;
		private Dictionary<Utf8String, Utf8String> _strategy_options;
		private int _replication_factor;
		private List<CfDef> _cf_defs;
		private bool _durable_writes = true;

		public Utf8String Name { get { return _name; } set { __isset.name = true; _name = value; } }
		public Utf8String Strategy_class { get { return _strategy_class; } set { __isset.strategy_class = true; _strategy_class = value; } }
		public Dictionary<Utf8String, Utf8String> Strategy_options { get { return _strategy_options; } set { __isset.strategy_options = true; _strategy_options = value; } }
		/// <summary>
		/// @deprecated ignored
		/// </summary>
		public int Replication_factor { get { return _replication_factor; } set { __isset.replication_factor = true; _replication_factor = value; } }
		public List<CfDef> Cf_defs { get { return _cf_defs; } set { __isset.cf_defs = true; _cf_defs = value; } }
		public bool Durable_writes { get { return _durable_writes; } set { __isset.durable_writes = true; _durable_writes = value; } }

		public Isset __isset = new Isset();
		public struct Isset {
			public Isset() { }

			public bool name { get; set; }
			public bool strategy_class { get; set; }
			public bool strategy_options { get; set; }
			public bool replication_factor { get; set; }
			public bool cf_defs { get; set; }
			public bool durable_writes { get; set; } = true;
		}

		public KsDef() {
		}

		public void Read( ProtocolCodec reader ) {
			reader.ReadStructBegin();
			while( true ) {
				var field = reader.ReadFieldBegin();
				if( field.Type == TypeKind.Stop ) break;

				switch( field.ID ) {
					case 1:
						if( field.Type == TypeKind.String ) {
							Name = reader.ReadString();
						}
						else reader.Skip( field.Type );
						break;

					case 2:
						if( field.Type == TypeKind.String ) {
							Strategy_class = reader.ReadString();
						}
						else reader.Skip( field.Type );
						break;

					case 3:
						if( field.Type == TypeKind.Map ) {
							var _map56 = reader.ReadMapBegin();
							Strategy_options = new Dictionary<Utf8String, Utf8String>( _map56.Count );
							for( var _i57 = 0; _i57 < _map56.Count; ++_i57 ) {
								var _key58 = reader.ReadString();
								var _val59 = reader.ReadString();
								_strategy_options[_key58] = _val59;
							}
							reader.ReadMapEnd();
						}
						else reader.Skip( field.Type );
						break;

					case 4:
						if( field.Type == TypeKind.Int32 ) {
							Replication_factor = reader.ReadInt32();
						}
						else reader.Skip( field.Type );
						break;

					case 5:
						if( field.Type == TypeKind.List ) {
							var _list60 = reader.ReadListBegin();
							Cf_defs = new List<CfDef>( _list60.Count );
							for( var _i61 = 0; _i61 < _list60.Count; ++_i61 ) {
								var _elem62 = new CfDef();
								_elem62.Read( reader );
								_cf_defs.Add( _elem62 );
							}
							reader.ReadListEnd();
						}
						else reader.Skip( field.Type );
						break;

					case 6:
						if( field.Type == TypeKind.Bool ) {
							Durable_writes = reader.ReadBool();
						}
						else reader.Skip( field.Type );
						break;

					default:
						reader.Skip( field.Type );
						break;
				}
				reader.ReadFieldEnd();
			}
			reader.ReadStructEnd();
		}

		public void Write( ProtocolCodec writer ) {
			writer.WriteStructBegin( "KsDef" );
			if( Name != null && __isset.name ) {
				writer.WriteFieldBegin( "name", TypeKind.String, 1 );
				writer.WriteString( _name );
				writer.WriteFieldEnd();
			}
			if( Strategy_class != null && __isset.strategy_class ) {
				writer.WriteFieldBegin( "strategy_class", TypeKind.String, 2 );
				writer.WriteString( _strategy_class );
				writer.WriteFieldEnd();
			}
			if( Strategy_options != null && __isset.strategy_options ) {
				writer.WriteFieldBegin( "strategy_options", TypeKind.Map, 3 );
				{
					writer.WriteMapBegin( TypeKind.String, TypeKind.String, _strategy_options.Count );
					foreach( var item in _strategy_options ) {
						writer.WriteString( item.Key );
						writer.WriteString( item.Value );
					}
					writer.WriteMapEnd();
				}
				writer.WriteFieldEnd();
			}
			if( __isset.replication_factor ) {
				writer.WriteFieldBegin( "replication_factor", TypeKind.Int32, 4 );
				writer.WriteInt32( _replication_factor );
				writer.WriteFieldEnd();
			}
			if( Cf_defs != null && __isset.cf_defs ) {
				writer.WriteFieldBegin( "cf_defs", TypeKind.List, 5 );
				{
					writer.WriteListBegin( TypeKind.Struct, _cf_defs.Count );
					foreach( var item in _cf_defs ) {
						item.Write( writer );
					}
					writer.WriteListEnd();
				}
				writer.WriteFieldEnd();
			}
			if( __isset.durable_writes ) {
				writer.WriteFieldBegin( "durable_writes", TypeKind.Bool, 6 );
				writer.WriteBool( _durable_writes );
				writer.WriteFieldEnd();
			}
			writer.WriteFieldStop();
			writer.WriteStructEnd();
		}

		public void ToString( StringBuilder builder, string format ) {
			builder.Concat( "Name: ", Name, " Strategy_class: ", Strategy_class, " Strategy_options: ", Strategy_options, " Replication_factor: ", Replication_factor, " Cf_defs: ", Cf_defs, " Durable_writes: ", Durable_writes );
		}
	}
}