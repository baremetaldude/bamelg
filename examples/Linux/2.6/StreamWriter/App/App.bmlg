//
// Created by $USER
//

using System;
using System.IO;
using System.Text;

namespace Example {
	class Test {
		[EntryPoint]
		private static void Main() {
			var builder = new StringBuilder();
			var basePath = ( Utf8String ) "/tmp/";

			for( var i = 0; i < 100; ++i ) {
				builder.AppendFormat( "[{0}] Utf16String with UNICODE words like эти [{0}]", i );
				builder.AppendLine();
			}

			using( var file = File.OpenWrite( basePath + "Result.Utf8.txt" ) )
			using( var writer = new StreamWriter( file, TextEncodingKind.Utf8 ) )
				writer.WriteLine( builder );

			using( var file = File.OpenWrite( basePath + "Result.Utf16.txt" ) )
			using( var writer = new StreamWriter( file, TextEncodingKind.Utf16 ) )
				writer.WriteLine( builder );

			using( var file = File.OpenWrite( basePath + "Result.Utf32.txt" ) )
			using( var writer = new StreamWriter( file, TextEncodingKind.Utf32 ) )
				writer.WriteLine( builder );

			using( var file = File.OpenWrite( basePath + "Result.866.txt" ) )
			using( var writer = new StreamWriter( file, CodePageID._866 ) )
				writer.WriteLine( builder );

			using( var file = File.OpenWrite( basePath + "Result.1251.txt" ) )
			using( var writer = new StreamWriter( file, CodePageID._1251 ) )
				writer.WriteLine( builder );

			using( var file = File.OpenWrite( basePath + "Result.20866.txt" ) )
			using( var writer = new StreamWriter( file, CodePageID._20866 ) )
				writer.WriteLine( builder );

			using( var file = File.OpenWrite( basePath + "Result.21866.txt" ) )
			using( var writer = new StreamWriter( file, CodePageID._21866 ) )
				writer.WriteLine( builder );

			if( File.Exists( basePath + "Append.txt" ) )
				File.Delete( basePath + "Append.txt" );

			{ // mostly your code must follow 'using pattern' ( always use 'using' when you clearly see object lifetime region )
				using( var file = File.OpenAppend( basePath + "Append.txt" ) )
				using( var writer = new StreamWriter( file, TextEncodingKind.Utf8 ) )
					writer.WriteLine( "lazy fox" );
			}

			{ // destructors also work as well (no cyclic references in this case).
				var file = File.OpenAppend( basePath + "Append.txt" );
				var writer = new StreamWriter( file, TextEncodingKind.Utf8 );

				writer.WriteLine( "eaten by big brown dog" );
			}
		}
	}
}