//
// Created by $USER
//

using System;

namespace Example {
	public partial class App {
		private static void PrintFloatNumber( float value ) {
			Console.WriteLine( "== {0:@} ==", value );
			Console.WriteLine( " RAW: {0:X8}; {0:B32}", *( uint* ) &value );
			Console.WriteLine( " Exponent: {0} BiasedExponent: {1}", value.Exponent, value.BiasedExponent );
			Console.WriteLine( " Mantissa: {0:X6}; {0:B23}", value.Mantissa );
		}

		private static void PrintDoubleNumber( double value ) {
			Console.WriteLine( "== {0:@} ==", value );
			Console.WriteLine( " RAW: {0:X16}; {0:B64}", *( ulong* ) &value );
			Console.WriteLine( " Exponent: {0} BiasedExponent: {1}", value.Exponent, value.BiasedExponent );
			Console.WriteLine( " Mantissa: {0:X13}; {0:B52}", value.Mantissa );
		}

		private static void PrintFloatLayout() {
			Console.WriteLine( "====================================================" );
			Console.WriteLine( "============= IEEE-754 float layout ================" );
			Console.WriteLine( "====================================================" );

			PrintFloatNumber( -0.125f );
			PrintFloatNumber( -0f );
			PrintFloatNumber( 0f );
			PrintFloatNumber( 0.125f );
			PrintFloatNumber( 0.25f );
			PrintFloatNumber( 0.5f );
			PrintFloatNumber( 1f );
			PrintFloatNumber( 1.5f );
			PrintFloatNumber( 2f );
			PrintFloatNumber( 2.5f );
			PrintFloatNumber( 4f );
			PrintFloatNumber( 4.5f );

			Console.WriteLine( "================  ... ==============================" );

			float x = 1 << float.MantissaBits;
			Console.WriteLine( "== {0}==1<<{1} ==", 1 << float.MantissaBits, float.MantissaBits );
			PrintFloatNumber( x );
			++*( int* ) &x;
			PrintFloatNumber( x );

			Console.WriteLine( "================  ... ==============================" );

			x = int.MaxValue;
			Console.WriteLine( "== {0}==int.MaxValue ==", int.MaxValue );
			PrintFloatNumber( x );
			x = uint.MaxValue;
			Console.WriteLine( "== {0}==uint.MaxValue ==", uint.MaxValue );
			PrintFloatNumber( x );

			Console.WriteLine( "================  ... ==============================" );

			x = long.MaxValue;
			Console.WriteLine( "== {0}==long.MaxValue ==", long.MaxValue );
			PrintFloatNumber( x );
			x = ulong.MaxValue;
			Console.WriteLine( "== {0}==ulong.MaxValue ==", ulong.MaxValue );
			PrintFloatNumber( x );
		}

		private static void PrintDoubleLayout() {
			Console.WriteLine( "=====================================================" );
			Console.WriteLine( "============= IEEE-754 double layout ================" );
			Console.WriteLine( "=====================================================" );

			PrintDoubleNumber( -0.125 );
			PrintDoubleNumber( -0.0 );
			PrintDoubleNumber( 0 );
			PrintDoubleNumber( 0.125 );
			PrintDoubleNumber( 0.25 );
			PrintDoubleNumber( 0.5 );
			PrintDoubleNumber( 1 );
			PrintDoubleNumber( 1.5 );
			PrintDoubleNumber( 2 );
			PrintDoubleNumber( 2.5 );
			PrintDoubleNumber( 4 );
			PrintDoubleNumber( 4.5 );

			Console.WriteLine( "================  ... ==============================" );

			double x = 1L << double.MantissaBits;
			Console.WriteLine( "== {0}==1<<{1} ==", 1L << double.MantissaBits, double.MantissaBits );
			PrintDoubleNumber( x );
			++*( long* ) &x;
			PrintDoubleNumber( x );

			Console.WriteLine( "================  ... ==============================" );

			x = int.MaxValue;
			Console.WriteLine( "== {0}==int.MaxValue ==", int.MaxValue );
			PrintDoubleNumber( x );
			x = uint.MaxValue;
			Console.WriteLine( "== {0}==uint.MaxValue ==", uint.MaxValue );
			PrintDoubleNumber( x );

			Console.WriteLine( "================  ... ==============================" );

			x = long.MaxValue;
			Console.WriteLine( "== {0}==long.MaxValue ==", long.MaxValue );
			PrintDoubleNumber( x );
			x = ulong.MaxValue;
			Console.WriteLine( "== {0}==ulong.MaxValue ==", ulong.MaxValue );
			PrintDoubleNumber( x );
		}

		[EntryPoint]
		private static void Main() {
			PrintFloatLayout();
			PrintDoubleLayout();
		}
	}
}