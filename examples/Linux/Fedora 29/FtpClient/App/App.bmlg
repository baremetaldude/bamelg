//
// Created by $USER
//

using System;
using System.Collections;
using System.IO;
using System.Net;
using System.Net.Ftp;
using System.Text;

using Platform.IO;
using Platform.Kernel;
using Platform.Libc;

namespace Example {
	public partial class App {
		[EntryPoint]
		private static void Main() {
			System.Threading.ThreadPool.Initialize();

			var eventLoop = new EventLoop() { Tracing = true };
			eventLoop.CatchExitSignals(); // convert signals to events

			eventLoop.BeginInvoke( Worker );

			eventLoop.Dispatch();
		}

		private static void Worker() {
			Fiber.Start( 8, FtpConnector );

			FetchStart = DateTime.UnbiasedNow;
		}

		private static DateTime FetchStart;

		private static void FtpConnector() {
			var client = new FtpClient( true );
			client.ConnectTimeout = TimeSpan.FromSeconds( 2 );
			client.ReadTimeout = TimeSpan.FromSeconds( 20 );
			client.WriteTimeout = TimeSpan.FromSeconds( 2 );

			if( !client.Connect( new IPv4Endpoint( 192, 168, 50, 141, 21 ) ) ) {
				using( Console.AttributedRegion( ConsoleColor.DarkRed ) )
					Console.WriteLine( "Unable to connect to FTP server" );

				Fiber.FiberManager.CurrentEventLoop.RequestExit();
				return;
			}

			if( client.LastStatus == FtpStatusCode.SendUserCommand ) {
				if( !client.Login( "****", "****" ) ) {
					using( Console.AttributedRegion( ConsoleColor.DarkRed ) )
						Console.WriteLine( "Unable to login" );

					Fiber.FiberManager.CurrentEventLoop.RequestExit();
					return;
				}
			}

			client.HelpSite();

			client.Feat();
			if( client.Capabilities.UTF8 ) client.Utf8();

			client.System();
			client.Pwd();
			client.TextMode();
			// client.List();
			client.SetWorkingDirectory( "Video" );
			client.BinaryMode();
			// client.ReadFile( "metar.txt", "/tmp/ftpr.txt" );
			
			client.WriteText( "content.txt", "1 2 3 4 5 6 7 8 9" );

			string content;
			client.ReadText( "content.txt", content );
			Console.WriteLine( "content={0}", content );

			client.Size( "content.txt" );

			client.Quit();

			Fiber.FiberManager.CurrentEventLoop.RequestExit();
		}
	}
}