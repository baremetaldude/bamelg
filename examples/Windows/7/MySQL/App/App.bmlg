//
// Created by $USER
//

using System;
using System.Data.MySQL;
using System.IO;
using System.Net;

using Platform;
using Platform.IO;

namespace Example {
	public class Test {
		private static WinsockInitializer _winsockInitializer = new WinsockInitializer();

		[EntryPoint]
		static void Main() {
			System.Threading.ThreadPool.Initialize();

			var _eventLoop = new EventLoop() { Tracing = true };
			_eventLoop.CatchConsoleQuit();

			_eventLoop.BeginInvoke( () => {
				Fiber.Start( 32, Worker );
			} );

			_eventLoop.Dispatch(); // wait until RequestExit
		}

		static void Worker() {
			finally { EventLoop.Instance.RequestExit(); }

			var connection = new MySQLConnection() {
				Trace = true,

				Parameters = new MySQLConnectionParameters {
					Schema = "Bamelg_Example",
					User = "bamelg",
					Password = @"Lj.jUef5DQJxcZC353Do6s21p@"
				}
			};

			if( !connection.Connect( new IPv4Endpoint( 192, 168, 3, 127, 3306 ) ) ) {
				Console.WriteLine( "Unable to connect" );
				return;
			}

			foreach( var row in connection.ExecuteQuery<QueryResult>( "select 33+100 as genval, 'some text' as genval2, UUID() as genuuid" ) )
				Console.WriteLine( row );

			foreach( var row in connection.ExecuteQuery<SomeData>( "select * from SomeData" ) )
				Console.WriteLine( row );
		}
	}

	[ReflectionMetadata( Mask = ReflectionMetadata.PublicFields )]
	public struct QueryResult : IFormattable {
		public string genval;
		public string genval2;
		public Guid genuuid;

		public QueryResult() {
		}

		public void ToString( StringBuilder builder, string format ) { // NOTE 'sbf' snippet used here
			builder.Concat( "genval='", genval, "' genval2='", genval2, "' genuuid='", genuuid, '\'' );
		}
	}

	[ReflectionMetadata( Mask = ReflectionMetadata.PublicFields | ReflectionMetadata.PublicProperties )]
	public struct SomeData : IFormattable {
		public int id;
		public bool c0 { get; set; }
		public int c1;
		public int c2;
		public int c3;
		public int c4;
		public float c5;
		public double c6;
		public double c7;
		public long c8;
		public int c9;
		public int c10;
		public int c11;
		public double c12;
		public char enum_value;

		public SomeData() {
		}

		public void ToString( StringBuilder builder, string format ) {
			builder.Concat( "id='", id, "' c0='", c0, "' c1='", c1, "' c2='", c2, "' c3='", c3, "' c4='", c4, "' c5='", c5, "' c6='", c6, "' c7='", c7, "' c8='", c8, "' c9='", c9, "' c10='", c10, "' c11='", c11, "' c12='", c12, "' enum_value='", enum_value, '\'' );
		}
	}
}